name: Extrinsic Ordering Check

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Create release draft"]
    branches:
      - dev
      - release
      - release-**
    types:
      - completed

jobs:
  check:
    name: Run check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chain: [rococo, litmus, litentry]
        include:
          - chain: rococo
            ref_url: wss://rpc.rococo-parachain-sg.litentry.io
          - chain: litmus
            ref_url: wss://rpc.litmus-parachain.litentry.io
          - chain: litentry
            ref_url: wss://rpc.litentry-parachain.litentry.io
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Prepare output and compare the metadata
        run: |
          RELEASE_TAG=v0.9.9-1
          PARACHAIN_NAME=local-parachain
          BASE_URL=ws://127.0.0.1:9944
          chain=${{ matrix.chain }}
          REF_URL=${{ matrix.ref_url }}
          # BASE_URL=ws://host.docker.internal:9944
          # chain=litmus
          # REF_URL=wss://rpc.litmus-parachain.litentry.io
          echo "Metadata comparison:" > output-$chain.txt
          echo "Date: $(date)" >> output-$chain.txt
          echo "Base: $BASE_URL" >> output-$chain.txt
          echo "Reference: $REF_URL" >> output-$chain.txt
          echo "Target version: $VERSION" >> output-$chain.txt
          echo "Chain: $chain" >> output-$chain.txt
          echo "----------------------------------------------------------------------" >> output-$chain.txt
          echo "Running parachain: $chain"
          docker run --pull always --name=$PARACHAIN_NAME  -d --rm -p 9944:9944 litentry/litentry-parachain:$RELEASE_TAG --chain=$chain --rpc-cors=all --ws-external --tmp -- --dev
          sleep 3
          CMD="docker run --pull always --network host jacogr/polkadot-js-tools metadata $REF_URL $BASE_URL"
          echo -e "Running:\n$CMD"
          docker run --pull always --rm --network host jacogr/polkadot-js-tools metadata $REF_URL $BASE_URL | tee -a output-$chain.txt
          SUMMARY=$(./scripts/extrinsic-ordering-filter.sh output-$chain.txt)
          echo -e $SUMMARY >> output-$chain.txt
          docker stop $PARACHAIN_NAME

          # rpc_map=$(mktemp -d)
          # echo wss://rpc.rococo-parachain-sg.litentry.io > $rpc_map/rococo
          # echo wss://rpc.litmus-parachain.litentry.io > $rpc_map/litmus
          # echo wss://rpc.litentry-parachain.litentry.io > $rpc_map/litentry
          # chains=("rococo" "litmus" "litentry")
          # for c in ${chains[@]}; do
          #   REF_URL=$(< "$rpc_map/$c")
          #   echo "Metadata comparison:" > output-$c.txt
          #   echo "Date: $(date)" >> output-$c.txt
          #   echo "Base: $BASE_URL" >> output-$c.txt
          #   echo "Reference: $REF_URL" >> output-$c.txt
          #   echo "Target version: $VERSION" >> output-$c.txt
          #   echo "Chain: $c" >> output-$c.txt
          #   echo "----------------------------------------------------------------------" >> output-$c.txt
          #   CMD="docker run --pull always --network host jacogr/polkadot-js-tools metadata $REF_URL $BASE_URL"
          #   echo -e "Running:\n$CMD"
          #   docker run --pull always --network host jacogr/polkadot-js-tools metadata $REF_URL $BASE_URL | tee -a output-$c.txt
          #   SUMMARY=$(./scripts/extrinsic-ordering-filter.sh output-$c.txt)
          #   echo -e $SUMMARY >> output-$c.txt
          # done
      - name: Show result
        run: |
          cat output-${{ matrix.chain }}.txt
          # cat output-rococo.txt
          # echo "--------------------------------------------------------------------------------"
          # cat output-litmus.txt
          # echo "--------------------------------------------------------------------------------"
          # cat output-litentry.txt

      - name: Save output as artifact
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: |
            output-${{ matrix.chain }}.txt
            # output-rococo.txt
            # output-litmus.txt
            # output-litentry.txt
