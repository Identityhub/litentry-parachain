name: Create release draft

on:
  workflow_dispatch:
    inputs:
      chain:
        type: choice
        description: Which parachain is regarded
        options:
        - litmus
        - litentry
      release_type:
        type: choice
        description: Which release type
        options:
        - client
        - runtime
        - both
      release_tag:
        description: an existing tag for creating release (e.g. v1.2.3)
        required: true
      diff_tag:
        description: an existing tag to run diff against (e.g. v1.2.0)
        default: ''
        required: false
      is_geneis_release:
        description: if it's genesis release [true|false]
        default: 'false'
        required: false

env:
  CHAIN: ${{ github.event.inputs.chain }}
  RELEASE_TYPE: ${{ github.event.inputs.release_type }}
  RELEASE_TAG: ${{ github.event.inputs.release_tag }}
  DIFF_TAG: ${{ github.event.inputs.diff_tag }}
  GENESIS_RELEASE: ${{ github.event.inputs.is_geneis_release }}

jobs:
  ## build runtime wasm ##
  build-wasm:
    if: github.event.inputs.release_type != 'client'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codes on ${{ env.RELEASE_TAG }}
        uses: actions/checkout@v2
        with:
          ref: ${{ env.RELEASE_TAG }}
          fetch-depth: 0

      - name: Build with srtool
        id: srtool_build
        uses: chevdor/srtool-actions@v0.3.0
        with:
          chain: ${{ env.CHAIN }}-parachain
          runtime_dir: runtime/${{ env.CHAIN }}

      - name: Summary
        run: |
          echo '${{ steps.srtool_build.outputs.json }}' | jq . > ${{ env.CHAIN }}-parachain-srtool-digest.json
          echo "==============================================="
          cat ${{ env.CHAIN }}-parachain-srtool-digest.json
          cp ${{ steps.srtool_build.outputs.wasm_compressed }} ${{ env.CHAIN }}-parachain-runtime.compact.compressed.wasm

      - name: Upload wasm artefacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.CHAIN }}-parachain-runtime
          path: |
            ${{ env.CHAIN }}-parachain-srtool-digest.json
            ${{ env.CHAIN }}-parachain-runtime.compact.compressed.wasm

  ## build docker image of client binary ##
  build-docker:
    if: github.event.inputs.release_type != 'runtime'
    runs-on: self-hosted
    steps:
      - name: Checkout codes on ${{ env.RELEASE_TAG }}
        uses: actions/checkout@v2
        with:
          ref: ${{ env.RELEASE_TAG }}
          fetch-depth: 0

      - name: Build docker image
        run: |
          ./scripts/build-docker.sh ${{ env.RELEASE_TAG }}
          echo "============================="
          docker images

      - name: Push docker image
        run: |
          docker push litentry/litentry-parachain:${{ env.RELEASE_TAG }}

      - name: Remove dangling images if any
        run: |
          [ -z "$(docker images --filter=dangling=true -q)" ] || docker rmi -f $(docker images --filter=dangling=true -q)

      - name: Generate genesis artefacts if need
        if: github.event.inputs.is_geneis_release == 'true'
        run: |
          docker run --rm litentry/litentry-parachain:${{ env.RELEASE_TAG }} export-genesis-state --chain=${{ env.CHAIN }} > ${{ env.CHAIN }}-genesis-state
          docker run --rm litentry/litentry-parachain:${{ env.RELEASE_TAG }} export-genesis-wasm --chain=${{ env.CHAIN }} > ${{ env.CHAIN }}-genesis-wasm

      - name: Copy client binary to disk
        run: |
          docker cp $(docker create --rm litentry/litentry-parachain:${{ env.RELEASE_TAG }}):/usr/local/bin/litentry-collator .

      - name: Upload the client binary
        uses: actions/upload-artifact@v2
        with:
          name: litentry-collator
          if-no-files-found: ignore
          path: |
            litentry-collator
            ${{ env.CHAIN }}-genesis-state
            ${{ env.CHAIN }}-genesis-wasm

  ## create the release draft ##
  create-release-draft:
    runs-on: ubuntu-latest
    needs: ["build-wasm", "build-docker"]
    steps:
      - name: Checkout codes on ${{ env.RELEASE_TAG }}
        uses: actions/checkout@v2
        with:
          ref: ${{ env.RELEASE_TAG }}
          fetch-depth: 0

      - name: Download all artefacts
        uses: actions/download-artifact@v2

      - name: Generate release notes
        run: |
          ./scripts/generate-release-notes.sh ${{ env.CHAIN }} ${{ github.workspace }}/.github/release_notes.md ${{ env.DIFF_TAG }} ${{ env.RELEASE_TYPE }}

      - name: set CHAIN_TITLE env
        run: echo "CHAIN_TITLE=${CHAIN/lit/Lit}" >> $GITHUB_ENV

      - name: Create release draft
        id: create-release-draft
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          name: ${{ env.CHAIN_TITLE }}-parachain ${{ env.RELEASE_TAG }}
          body_path: ${{ github.workspace }}/.github/release_notes.md
          draft: true
          files: |
            ${{ env.CHAIN }}-parachain-runtime/${{ env.CHAIN }}-parachain-srtool-digest.json
            ${{ env.CHAIN }}-parachain-runtime/${{ env.CHAIN }}-parachain-runtime.compact.compressed.wasm
            litentry-collator/*
