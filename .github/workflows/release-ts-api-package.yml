name: Release Ts API Package

# This file is a joint CI of parachain and tee-worker, it contains:
# - build (of docker images)
# - format check
# - unit tests
# - integration tests

# Some notes:
#
# [1] the tee-worker part is a modified version of tee-worker/.github/workflows/build_and_test.yml
# with extra triggering control.
#
# [2] the original file (`tee-worker/.github/workflows/build_and_test.yml`) is kept to sync
# upstream changes, therefore we need to manually apply the changes to this file.

# [3] please beware that if a job in `needs` is skipped, its dependent job will also be skipped,
# see https://github.com/actions/runner/issues/491
#
# jobs that will always be executed:
# - fmt
# - set-condition
# - parachain-build-dev
# - parachain-build-tee-prod
# - tee-build
#
# [4] please note that job-level if `env` is not supported:
# https://github.com/actions/runner/issues/1189
# as a workaround, we need to put it in a step-level or use `needs.outputs`
#
# [5] parachain-build-tee-prod builds the parachain image without `tee-dev` feature
# It's used with tee-worker production deployment with HW mode.

on:
  workflow_dispatch:
    inputs:
      rebuild-parachain-docker:
        type: boolean
        description: rebuild-parachain-docker
        required: true
        default: true
      rebuild-tee-docker:
        type: boolean
        description: rebuild-tee-docker
        required: true
        default: true

env:
  CARGO_TERM_COLOR: always
  DOCKER_BUILDKIT: 1
  # the branch or tag on which this workflow is triggered
  # `head_ref` will only be set if the triggering event is `pull_request`
  REF_VERSION: ${{ github.head_ref || github.ref_name }}

concurrency:
  # see https://stackoverflow.com/questions/74117321/if-condition-in-concurrency-in-gha
  # along with the `sequentialise` job below, it guarantees:
  # - for push in dev: all triggered CIs will be run sequentially, none is cancelled
  # - for PR: later triggered CIs will cancel previous runs, maximum one CI will be run
  group: ${{ github.workflow }}-${{ github.head_ref && github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  sequentialise:
    runs-on: ubuntu-latest
    steps:
      - name: Wait for previous run
        if: ${{ !failure() && (github.event_name == 'push') && (github.ref == 'refs/heads/dev') }}
        uses: mktcode/consecutive-workflow-action@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          interval: 300
          branch: dev

  parachain-build-dev:
    runs-on: ubuntu-latest
    needs:
      - sequentialise
    steps:
      - name: Free up disk space
        if: startsWith(runner.name, 'GitHub Actions')
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          swap-storage: false
          large-packages: false

      - uses: actions/checkout@v4

      - name: Pull docker image optinally
        run: |
          docker pull litentry/litentry-parachain:latest

      - name: Save docker image
        run: |
          docker save litentry/litentry-parachain:latest | gzip > litentry-parachain-dev.tar.gz

      - name: Upload docker image
        uses: actions/upload-artifact@v3
        with:
          name: litentry-parachain-dev
          path: litentry-parachain-dev.tar.gz
          if-no-files-found: error

      - name: Fail early
        if: failure()
        uses: andymckay/cancel-action@0.3

  parachain-build-tee-prod:
    runs-on: ubuntu-latest
    needs:
      - sequentialise
    steps:
      - name: Free up disk space
        if: startsWith(runner.name, 'GitHub Actions')
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          swap-storage: false
          large-packages: false

      - uses: actions/checkout@v4

      - name: Pull docker image optionally
        run: |
          docker pull litentry/litentry-parachain:tee-prod

      - name: Save docker image
        run: |
          docker save litentry/litentry-parachain:tee-prod | gzip > litentry-parachain-tee-prod.tar.gz

      - name: Upload docker image
        uses: actions/upload-artifact@v3
        with:
          name: parachain-artifact-tee-prod
          path: litentry-parachain-tee-prod.tar.gz
          if-no-files-found: error

      - name: Fail early
        if: failure()
        uses: andymckay/cancel-action@0.3

  tee-build:
    runs-on: ubuntu-latest
    needs:
      - sequentialise
    steps:
      - name: Free up disk space
        if: startsWith(runner.name, 'GitHub Actions')
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: true
          swap-storage: false
          large-packages: false

      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          # use the docker driver to access the local image
          # we don't need external caches or multi platforms here
          # see https://docs.docker.com/build/drivers/
          driver: docker

      - name: Pull and tag worker and cli image optionally
        run: |
          docker pull litentry/litentry-worker:latest
          docker pull litentry/litentry-cli:latest

      - run: docker images --all

      - name: Save docker images
        run: docker save litentry/litentry-worker:latest litentry/litentry-cli:latest | gzip > litentry-tee.tar.gz

      - name: Upload docker images
        uses: actions/upload-artifact@v3
        with:
          name: litentry-tee
          path: litentry-tee.tar.gz
          if-no-files-found: error

      - name: Fail early
        if: failure()
        uses: andymckay/cancel-action@0.3 
        
  update-metadata:
    runs-on: ubuntu-latest
    needs:
      - parachain-build-dev
      - parachain-build-tee-prod
      - tee-build

    steps:
      - uses: actions/checkout@v4

      - name: Pull polkadot image
        run: |
          docker pull parity/polkadot

      - uses: actions/download-artifact@v3
        with:
          name: litentry-parachain-dev

      - uses: actions/download-artifact@v3
        with:
          name: litentry-tee

      - name: Load docker image
        run: |
          docker load < litentry-parachain-dev.tar.gz
          docker load < litentry-tee.tar.gz
          docker images

      - name: Enable corepack and pnpm
        run: corepack enable && corepack enable pnpm

      - name: Generate parachain artefacts
        run: |
          ./tee-worker/scripts/litentry/generate_parachain_artefacts.sh
          ls -l docker/generated-rococo/
          ls -l tee-worker/docker/litentry/
          shasum tee-worker/docker/litentry/*.json

      - name: Build litentry parachain docker images
        run: |
          cd tee-worker/docker
          docker compose -f litentry-parachain.build.yml build

      - name: Fetch metadata
        timeout-minutes: 20
        run: |
          cd tee-worker/docker
          docker compose -f docker-compose.yml -f release-ts-api-package.yml up --no-build --exit-code-from release-ts-api-package release-ts-api-package

      - name: Stop docker containers
        run: |
          cd tee-worker/docker
          docker compose -f docker-compose.yml -f release-ts-api-package.yml stop

      - name: Collect Docker Logs
        continue-on-error: true
        if: always()
        uses: jwalton/gh-docker-logs@v2
        with:
          tail: all
          dest: logs

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs-release-ts-api-package
          path: logs
          if-no-files-found: ignore