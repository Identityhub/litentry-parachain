name: Release Ts API package2
on:
  workflow_dispatch:

env:
  NODE_AUTH_TOKEN: ${{ secrets.RELEASE_TS_API_PACKAGE_TOKEN }}

jobs:
  UpdateMetadata:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Pull polkadot image
        run: |
          docker pull parity/polkadot

      - uses: actions/download-artifact@v3
        with:
          name: litentry-parachain-dev

      - uses: actions/download-artifact@v3
        with:
          name: litentry-tee

      - name: Load docker image
        run: |
          docker load < litentry-parachain-dev.tar.gz
          docker load < litentry-tee.tar.gz
          docker images

      - name: Enable corepack and pnpm
        run: corepack enable && corepack enable pnpm

      - name: Generate parachain artefacts
        run: |
          ./tee-worker/scripts/litentry/generate_parachain_artefacts.sh
          ls -l docker/generated-rococo/
          ls -l tee-worker/docker/litentry/
          shasum tee-worker/docker/litentry/*.json

      - name: Build litentry parachain docker images
        run: |
          cd tee-worker/docker
          docker compose -f litentry-parachain.build.yml build

      - name: Fetch metadata
        timeout-minutes: 40
        run: |
          cd tee-worker/docker
          docker compose -f docker-compose.yml -f release-ts-api-package.yml up --no-build --exit-code-from release-ts-api-package release-ts-api-package

      - name: Stop docker containers
        run: |
          cd tee-worker/docker
          docker compose -f docker-compose.yml -f release-ts-api-package.yml stop

      - name: Collect Docker Logs
        continue-on-error: true
        if: always()
        uses: jwalton/gh-docker-logs@v2
        with:
          tail: all
          dest: logs

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: logs-release-ts-api-package
          path: logs
          if-no-files-found: ignore

  # publish:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Code
  #       uses: actions/checkout@v4

  #     - name: Use Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: 18
  #         registry-url: https://npm.pkg.github.com/

  #     - name: Setup npm config
  #       run: |
  #         echo "//npm.pkg.github.com/:_authToken=\${{ secrets.RELEASE_TS_API_PACKAGE_TOKEN }}" > .npmrc
  #         npm config set @litentry:registry https://npm.pkg.github.com

  #     - name: Install pnpm
  #       run: corepack enable pnpm

  #     - name: Install dependencies
  #       run: |
  #         cd tee-worker/client-api
  #         pnpm install

  #     - name: Build and publish parachain and sidechain API
  #       if: github.ref_name == 'dev' || github.ref_name == 'staging'
  #       run: |
  #         cd tee-worker/client-api/parachain-api
  #         pnpm build
  #         npm publish --tag ${{ github.ref_name }}

  #         echo "------------------------parachain API published------------------------"

  #         cd ../sidechain-api
  #         pnpm build
  #         npm publish --tag ${{ github.ref_name }}

  #         echo "------------------------sidechain API published------------------------"
