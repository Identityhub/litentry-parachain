name: Publish to NPM

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'

      - name: Install Yarn
        run: npm install -g yarn

      - name: Install dependencies
        run: |
          cd tee-worker/client-api
          corepack yarn install

      - name: Build and Publish Parachain
        run: |
          branch_name="${{ github.ref }}"
          echo "Branch Name: $branch_name" 
          if [ "$branch_name" == "refs/heads/dev" ]; then
            cd tee-worker/client-api/parachain-api
            corepack yarn build
            npm publish
            echo "Published Parachain on the 'dev' branch."
          elif [ "$branch_name" == "refs/heads/staging" ]; then
            cd tee-worker/client-api/parachain-api
            corepack yarn build
            npm publish --tag staging
            echo "Published Parachain on the 'staging' branch with 'staging' tag."
          else
            echo "Not on 'dev' or 'staging' branch, skipping Parachain publish."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build and Publish Sidechain
        run: |
          branch_name="${{ github.ref }}"
          echo "Branch Name: $branch_name" 
          if [ "$branch_name" == "refs/heads/dev" ]; then
            cd tee-worker/client-api/sidechain-api
            corepack yarn build
            npm publish
            echo "Published Sidechain on the 'dev' branch."
          elif [ "$branch_name" == "refs/heads/staging" ]; then
            cd tee-worker/client-api/sidechain-api
            corepack yarn build
            npm publish --tag staging
            echo "Published Sidechain on the 'staging' branch with 'staging' tag."
          else
            echo "Not on 'dev' or 'staging' branch, skipping Sidechain publish."
          fi
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
