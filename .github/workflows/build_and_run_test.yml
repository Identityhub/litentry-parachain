name: Build & Test

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-test:

    runs-on: self-hosted

    steps:
    - name: Checkout codes
      uses: actions/checkout@v2
      with:
        submodules: true

    - name: Build docker image
      run: |
        ./build.sh
      working-directory: ./docker

    - name: Set tmp directory
      id: set-tmpdir
      run: |
        tmpdir=$(mktemp -d /tmp/tmp.XXXXXX)
        echo "::set-output name=tmpdir::$tmpdir"

    - name: Start docker containers
      run: |
        docker-compose up -d --build
      working-directory: ./docker/generated

    - name: Run integration test
      run: |
        tmpdir=${{ steps.set-tmpdir.outputs.tmpdir }}
        ts-tests/scripts/run-test.sh $tmpdir
      shell: bash {0}

    - name: Archive logs if test fails
      uses: actions/upload-artifact@v2
      if: ${{ failure() }}
      with:
        name: litentry-parachain-debug.log
        path: ${{ steps.set-tmpdir.outputs.tmpdir }}/**/*
        retention-days: 7

    - name: Push docker image if test passes
      if: ${{ success() }}
      run: |
        [ -z "$(docker images --filter=dangling=true -q)" ] || docker rmi -f $(docker images --filter=dangling=true -q)
        docker images
        docker push -a litentry/litentry-parachain

    - name: Clean up
      if: ${{ always() }}
      run: |
        tmpdir=${{ steps.set-tmpdir.outputs.tmpdir }}
        rm -rf "$tmpdir"
        ts-tests/scripts/clean-up.sh
