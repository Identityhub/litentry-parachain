name: Build & Test

on:
  push:
    branches:
      - dev
    paths-ignore:
      - '**/dependabot.yml'
      - '**/README.md'
  pull_request:
    branches:
      - dev
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  check-cargo-fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          target: wasm32-unknown-unknown
          default: true

      - name: Run cargo fmt check
        run: make fmtcheck

  check-cargo-clippy:
    runs-on: ubuntu-latest
    needs: check-cargo-fmt
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy
          target: wasm32-unknown-unknown
          default: true

      - name: Run cargo clippy check
        run: make clippy

  run-cargo-tests:
    runs-on: ubuntu-latest
    needs: check-cargo-fmt
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          target: wasm32-unknown-unknown
          default: true

      - name: Run cargo unittests
        run: cargo test -p pallet-* --lib

  build-docker:
    if: "!contains(github.event.commits[0].message, '[SKIP CI]')"
    concurrency:
      group: ${{ github.ref }}
      cancel-in-progress: true
    runs-on: self-hosted
    needs: check-cargo-fmt
    steps:
      - name: Checkout codes
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build docker image
        timeout-minutes: 40
        run: |
          ./scripts/build-docker.sh
          echo "============================="
          docker images

  run-ts-tests:
    runs-on: self-hosted
    needs: build-docker
    strategy:
      matrix:
        chain:
          - litmus
          - litentry
    steps:
      - name: Run ts tests for ${{ matrix.chain }}
        timeout-minutes: 20
        run: |
          make test-ts-docker-${{ matrix.chain }}

      - name: Archive logs if test fails
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: ${{ matrix.chain }}-ts-tests-artifacts
          path: /tmp/parachain_dev/
          retention-days: 3

      - name: Clean up for ${{ matrix.chain }}
        if: ${{ always() }}
        run: |
          make clean-docker-${{ matrix.chain }}

  push-docker-image:
    runs-on: self-hosted
    needs: ["check-cargo-clippy", "run-cargo-tests", "run-ts-tests"]
    steps:
      - name: Push docker image on dev branch if test passes
        if: ${{ success() && (github.event_name == 'push') && (github.ref == 'refs/heads/dev') }}
        run:
          docker push litentry/litentry-parachain:latest
