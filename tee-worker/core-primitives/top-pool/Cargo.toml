[package]
name = "itp-top-pool"
version = "0.9.0"
authors = ['Trust Computing GmbH <info@litentry.com>', 'Integritee AG <hello@integritee.network>']
edition = "2021"

[dependencies]
# sgx dependencies
sgx_tstd = { workspace = true, optional = true, features = ["net", "thread", "untrusted_time"] }

# local dependencies
itc-direct-rpc-server = { workspace = true }
itp-stf-primitives = { workspace = true }
itp-types = { workspace = true }
its-primitives = { workspace = true }

# sgx enabled external libraries
jsonrpc-core_sgx = { workspace = true, optional = true }
linked-hash-map_sgx = { workspace = true, optional = true }

# std compatible external libraries (make sure these versions match with the sgx-enabled ones above)
jsonrpc-core = { workspace = true, optional = true }
linked-hash-map = { workspace = true, optional = true }

# no-std compatible libraries
byteorder = { workspace = true }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
derive_more = { workspace = true }
log = { workspace = true }
sp-core = { workspace = true }
sp-runtime = { workspace = true }

# dev dependencies (for tests)
[dev-dependencies]
parity-util-mem = { workspace = true }
itp-test = { workspace = true }
serde = { workspace = true, features = ["alloc", "derive"] }
sp-application-crypto = { workspace = true }
# litentry
litentry-primitives = { workspace = true }

[features]
default = ["std"]
sgx = [
    "sgx_tstd",
    "itc-direct-rpc-server/sgx",
    "jsonrpc-core_sgx",
    "linked-hash-map_sgx",
    # litentry
    "litentry-primitives/sgx",
]
std = [
    "itc-direct-rpc-server/std",
    "itp-types/std",
    "its-primitives/std",
    "jsonrpc-core",
    "linked-hash-map",
    "log/std",
    "serde/std",
    "sp-core/std",
    "sp-runtime/std",
    "sp-application-crypto/std",
    # litentry
    "litentry-primitives/std",
]
mocks = []
