[package]
name = "itp-test"
version = "0.9.0"
edition = "2021"

[dependencies]
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
log = { workspace = true }
sgx-crypto-helper = { workspace = true }

# sgx deps
jsonrpc-core_sgx = { workspace = true, optional = true }
sgx_tstd = { workspace = true, optional = true }
sgx_types = { workspace = true }

# substrate deps
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }

# local deps
itp-node-api = { workspace = true }
itp-node-api-metadata-provider = { workspace = true }
itp-ocall-api = { workspace = true }
itp-sgx-crypto = { workspace = true }
itp-sgx-externalities = { workspace = true }
itp-stf-interface = { workspace = true }
itp-stf-primitives = { workspace = true }
itp-stf-state-handler = { workspace = true }
itp-storage = { workspace = true }
itp-time-utils = { workspace = true }
itp-types = { workspace = true, features = ["test"] }

# litentry
hex = { workspace = true }
lc-teebag-storage = { workspace = true }
litentry-primitives = { workspace = true }

[features]
default = ["std"]
std = [
    "codec/std",
    "itp-node-api-metadata-provider/std",
    "itp-node-api/std",
    "itp-ocall-api/std",
    "itp-sgx-crypto/std",
    "itp-sgx-externalities/std",
    "itp-stf-interface/std",
    "itp-stf-primitives/std",
    "itp-stf-state-handler/std",
    "itp-storage/std",
    "itp-time-utils/std",
    "itp-types/std",
    "log/std",
    "sp-core/std",
    "sp-io/std",
    "sp-runtime/std",
    "sp-std/std",
    "litentry-primitives/std",
    "lc-teebag-storage/std",
]
sgx = [
    "itp-node-api/sgx",
    "itp-node-api-metadata-provider/sgx",
    "itp-sgx-crypto/sgx",
    "itp-sgx-externalities/sgx",
    "itp-stf-state-handler/sgx",
    "itp-time-utils/sgx",
    "jsonrpc-core_sgx",
    "sgx_tstd",
    "litentry-primitives/sgx",
]
