[package]
name = "itp-top-pool-author"
version = "0.9.0"
authors = ['Trust Computing GmbH <info@litentry.com>', 'Integritee AG <hello@integritee.network>']
edition = "2021"

[dependencies]
# sgx dependencies
sgx_tstd = { workspace = true, optional = true }

# local dependencies
itp-enclave-metrics = { workspace = true }
itp-ocall-api = { workspace = true }
itp-sgx-crypto = { workspace = true }
itp-stf-primitives = { workspace = true }
itp-stf-state-handler = { workspace = true }
itp-test = { workspace = true, optional = true }
itp-top-pool = { workspace = true }
itp-types = { workspace = true }

# sgx enabled external libraries
jsonrpc-core_sgx = { workspace = true, optional = true }

# std compatible external libraries (make sure these versions match with the sgx-enabled ones above)
jsonrpc-core = { workspace = true, optional = true }

# no-std compatible libraries
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
derive_more = { workspace = true }
log = { workspace = true }
sp-core = { workspace = true }
sp-runtime = { workspace = true }

lazy_static = { workspace = true, optional = true }

# litentry
itp-utils = { workspace = true }
litentry-primitives = { workspace = true }

[dev-dependencies]
futures = { workspace = true }
itp-sgx-crypto = { workspace = true, features = ["mocks"] }
itp-test = { workspace = true }
itp-top-pool = { workspace = true, features = ["mocks"] }
sgx-crypto-helper = { workspace = true }
sp-keyring = { workspace = true }


[features]
default = ["std"]
std = [
    "itp-sgx-crypto/std",
    "itp-enclave-metrics/std",
    "itp-ocall-api/std",
    "itp-stf-state-handler/std",
    "itp-top-pool/std",
    "itp-types/std",
    "jsonrpc-core",
    "log/std",
    # litentry
    "litentry-primitives/std",
    "itp-utils/std",
]
sgx = [
    "sgx_tstd",
    "jsonrpc-core_sgx",
    "itp-enclave-metrics/sgx",
    "itp-sgx-crypto/sgx",
    "itp-stf-state-handler/sgx",
    "itp-top-pool/sgx",
    # litentry
    "litentry-primitives/sgx",
]
test = ["itp-test/sgx", "itp-top-pool/mocks"]
mocks = ["lazy_static"]
sidechain = []
offchain-worker = []
