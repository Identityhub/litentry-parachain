// Copyright 2020-2024 Trust Computing GmbH.
// This file is part of Litentry.
//
// Litentry is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Litentry is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Litentry.  If not, see <https://www.gnu.org/licenses/>.

#[cfg(all(feature = "std", feature = "sgx"))]
compile_error!("feature \"std\" and feature \"sgx\" cannot be enabled at the same time");

#[cfg(all(not(feature = "std"), feature = "sgx"))]
extern crate sgx_tstd as std;

#[cfg(all(not(feature = "std"), feature = "sgx"))]
extern crate hex_sgx as hex;

use primitive_types::H160;
use std::{collections::HashMap, vec::Vec};

pub trait SmartContractRepository {
	fn get(&self, id: &H160) -> Option<Vec<u8>>;
}

pub struct InMemorySmartContractRepo {
	map: HashMap<H160, Vec<u8>>,
}

impl InMemorySmartContractRepo {
	pub fn new() -> Self {
		let mut map = HashMap::new();
		//a1
		map.insert(
            hash(0),
            hex::decode("608060405234801561001057600080fd5b50610960806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806309c5eabe14610030575b600080fd5b61004361003e3660046104c3565b61005c565b604051610053949392919061059f565b60405180910390f35b60608060606000808580602001905181019061007891906106db565b905061008381610093565b9450945094509450509193509193565b60608060606000806040518060800160405280604581526020016108af60459139604080518082018252601b81527f4261736963204964656e7469747920566572696669636174696f6e000000000060208083019190915260008054600181018255818052845160608101909552603780865295965092947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390930193909290916108f490830139805161014e939250602090910190610392565b5060008080805b8a518110156101cc576101808b828151811061017357610173610834565b60200260200101516102c5565b1561018e57600191506101ba565b6101b08b82815181106101a3576101a3610834565b60200260200101516102f4565b156101ba57600192505b806101c48161084a565b915050610155565b508080156101d75750815b9250848460008581805480602002602001604051908101604052809291908181526020016000905b828210156102ab57838290600052602060002001805461021e90610873565b80601f016020809104026020016040519081016040528092919081815260200182805461024a90610873565b80156102975780601f1061026c57610100808354040283529160200191610297565b820191906000526020600020905b81548152906001019060200180831161027a57829003601f168201915b5050505050815260200190600101906101ff565b505050509150985098509850985050505050509193509193565b60006102d08261031d565b806102df57506102df8261032a565b806102ee57506102ee82610337565b92915050565b60006102ff82610344565b8061030e575061030e82610351565b806102ee57506102ee8261035e565b60006102ee826000610367565b60006102ee826001610367565b60006102ee826002610367565b60006102ee826003610367565b60006102ee826004610367565b60006102ee8260055b60008163ffffffff16836000015163ffffffff161415610389575060016102ee565b50600092915050565b82805461039e90610873565b90600052602060002090601f0160209004810192826103c05760008555610406565b82601f106103d957805160ff1916838001178555610406565b82800160010185558215610406579182015b828111156104065782518255916020019190600101906103eb565b50610412929150610416565b5090565b5b808211156104125760008155600101610417565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156104645761046461042b565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156104935761049361042b565b604052919050565b600067ffffffffffffffff8211156104b5576104b561042b565b50601f01601f191660200190565b6000602082840312156104d557600080fd5b813567ffffffffffffffff8111156104ec57600080fd5b8201601f810184136104fd57600080fd5b803561051061050b8261049b565b61046a565b81815285602083850101111561052557600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561055e578181015183820152602001610546565b8381111561056d576000848401525b50505050565b6000815180845261058b816020860160208601610543565b601f01601f19169290920160200192915050565b6080815260006105b26080830187610573565b6020838203818501526105c58288610573565b915083820360408501528186518084528284019150828160051b85010183890160005b8381101561061657601f19878403018552610604838351610573565b948601949250908501906001016105e8565b50508095505050505050821515606083015295945050505050565b600067ffffffffffffffff82111561064b5761064b61042b565b5060051b60200190565b805163ffffffff8116811461066957600080fd5b919050565b600082601f83011261067f57600080fd5b8151602061068f61050b83610631565b82815260059290921b840181019181810190868411156106ae57600080fd5b8286015b848110156106d0576106c381610655565b83529183019183016106b2565b509695505050505050565b600060208083850312156106ee57600080fd5b825167ffffffffffffffff8082111561070657600080fd5b818501915085601f83011261071a57600080fd5b815161072861050b82610631565b81815260059190911b8301840190848101908883111561074757600080fd5b8585015b838110156108275780518581111561076257600080fd5b86016060818c03601f190112156107795760008081fd5b610781610441565b61078c898301610655565b8152604080830151888111156107a25760008081fd5b8301603f81018e136107b45760008081fd5b8a8101516107c461050b8261049b565b8181528f8d8e848601010111156107db5760008081fd5b6107ea828e8301868601610543565b848d015250506060830151888111156108035760008081fd5b6108118e8c8387010161066e565b918301919091525084525091860191860161074b565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561086c57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061088757607f821691505b602082108114156108a857634e487b7160e01b600052602260045260246000fd5b5091905056fe596f75277665206964656e746966696564206174206c65617374206f6e65206163636f756e742f6164647265737320696e20626f7468205765623220616e6420576562332e246861735f776562325f6163636f756e74203d3d207472756520616e6420246861735f776562335f6163636f756e74203d3d2074727565a26469706673582212201f0c53a67851e744956741602a6514ddc6f5251c400d6a8d211c35ced1b32a4f64736f6c63430008080033").unwrap()
        );
		//a20
		map.insert(
			hash(1),
			hex::decode("608060405234801561001057600080fd5b50610a93806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806309c5eabe14610030575b600080fd5b61004361003e3660046104f0565b61005c565b60405161005394939291906105cc565b60405180910390f35b6060806060600080858060200190518101906100789190610708565b905061008381610093565b9450945094509450509193509193565b60608060606000806040518060c001604052806086815260200161099060869139905060006040518060400160405280601c81526020017f49444875622045564d2056657273696f6e204561726c79204269726400000000815250905060405180604001604052806013815260200172246861735f6a6f696e6564203d3d207472756560681b8152506000808154811061012f5761012f610861565b90600052602060002001908051906020019061014c9291906103bf565b506000805b885181101561023e5761017c89828151811061016f5761016f610861565b6020026020010151610329565b156101d35760006040518060c001604052806086815260200161090a6086913960408051808201909152600a8152690bda185cd29bda5b995960b21b60208201529091506101ca828261033c565b93505050610221565b6000604051806080016040528060488152602001610a166048913960408051808201909152600a8152690bda185cd29bda5b995960b21b602082015290915061021c828261033c565b935050505b811561022c5761023e565b8061023681610877565b915050610151565b50828260008381805480602002602001604051908101604052809291908181526020016000905b82821015610311578382906000526020600020018054610284906108a0565b80601f01602080910402602001604051908101604052809291908181526020018280546102b0906108a0565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b505050505081526020019060010190610265565b50505050915096509650965096505050509193509193565b6000610336826000610395565b92915050565b600080600084846040516020016103549291906108db565b60408051601f19818403018152908290528051909250906020818382860160006003600019f161038357600080fd5b60208101604052519695505050505050565b60008163ffffffff16836000015163ffffffff1614156103b757506001610336565b506000610336565b8280546103cb906108a0565b90600052602060002090601f0160209004810192826103ed5760008555610433565b82601f1061040657805160ff1916838001178555610433565b82800160010185558215610433579182015b82811115610433578251825591602001919060010190610418565b5061043f929150610443565b5090565b5b8082111561043f5760008155600101610444565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561049157610491610458565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156104c0576104c0610458565b604052919050565b600067ffffffffffffffff8211156104e2576104e2610458565b50601f01601f191660200190565b60006020828403121561050257600080fd5b813567ffffffffffffffff81111561051957600080fd5b8201601f8101841361052a57600080fd5b803561053d610538826104c8565b610497565b81815285602083850101111561055257600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561058b578181015183820152602001610573565b8381111561059a576000848401525b50505050565b600081518084526105b8816020860160208601610570565b601f01601f19169290920160200192915050565b6080815260006105df60808301876105a0565b6020838203818501526105f282886105a0565b915083820360408501528186518084528284019150828160051b85010183890160005b8381101561064357601f198784030185526106318383516105a0565b94860194925090850190600101610615565b50508095505050505050821515606083015295945050505050565b600067ffffffffffffffff82111561067857610678610458565b5060051b60200190565b805163ffffffff8116811461069657600080fd5b919050565b600082601f8301126106ac57600080fd5b815160206106bc6105388361065e565b82815260059290921b840181019181810190868411156106db57600080fd5b8286015b848110156106fd576106f081610682565b83529183019183016106df565b509695505050505050565b6000602080838503121561071b57600080fd5b825167ffffffffffffffff8082111561073357600080fd5b818501915085601f83011261074757600080fd5b81516107556105388261065e565b81815260059190911b8301840190848101908883111561077457600080fd5b8585015b838110156108545780518581111561078f57600080fd5b86016060818c03601f190112156107a65760008081fd5b6107ae61046e565b6107b9898301610682565b8152604080830151888111156107cf5760008081fd5b8301603f81018e136107e15760008081fd5b8a8101516107f1610538826104c8565b8181528f8d8e848601010111156108085760008081fd5b610817828e8301868601610570565b848d015250506060830151888111156108305760008081fd5b61083e8e8c8387010161069b565b9183019190915250845250918601918601610778565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561089957634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806108b457607f821691505b602082108114156108d557634e487b7160e01b600052602260045260246000fd5b50919050565b6040815260006108ee60408301856105a0565b828103602084015261090081856105a0565b9594505050505056fe687474703a2f2f6c6f63616c686f73743a31393532372f6576656e74732f646f65732d757365722d6a6f696e65642d65766d2d63616d706169676e3f6163636f756e743d307864343335393363373135666464333163363131343161626430346139396664363832326338353538383534636364653339613536383465376135366461323764546865207573657220697320616e206561726c7920626972642075736572206f6620746865204964656e746974794875622045564d2076657273696f6e20616e64206861732067656e657261746564206174206c6561737420312063726564656e7469616c20647572696e672032303233204175672031347468207e2041756720323173742e687474703a2f2f6c6f63616c686f73743a31393532372f6576656e74732f646f65732d757365722d6a6f696e65642d65766d2d63616d706169676e3f6163636f756e743d74657374a2646970667358221220011562d218eda11756e5a35bcebbacbdafe5947a9f6827e2c4ccd7ac0831bad864736f6c63430008080033").unwrap()
		);
		// is age over 50
		map.insert(
            hash(2),
            hex::decode("608060405234801561001057600080fd5b5061063d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309c5eabe1461003b578063c66e70f014610067575b600080fd5b61004e6100493660046102f2565b61008a565b60405161005e949392919061038b565b60405180910390f35b61007a6100753660046103ed565b6100c1565b604051901515815260200161005e565b6060806060600080858060200190518101906100a6919061046d565b90506100b1816100e6565b9450945094509450509193509193565b6000816000015163ffffffff16600414156100de57506001919050565b506000919050565b60608060606000806040518060600160405280603181526020016105b46031913990506000604051806040016040528060148152602001732f646174612f332f656d706c6f7965655f61676560601b815250905060006040518060600160405280602381526020016105e560239139604080518082018252600a81526904973206f7665722035360b41b602080830191909152825180840190935260088352670616765203e2035360c41b908301529192506000806101a587876101d3565b905060328160070b13156101bc57600191506101c1565b600091505b50929a91995097509095509350505050565b60405160009081908385016020828288866002600019f16101f357600080fd5b506020810160405251949350505050565b634e487b7160e01b600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561023d5761023d610204565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561026c5761026c610204565b604052919050565b600067ffffffffffffffff82111561028e5761028e610204565b50601f01601f191660200190565b600082601f8301126102ad57600080fd5b81356102c06102bb82610274565b610243565b8181528460208386010111156102d557600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561030457600080fd5b813567ffffffffffffffff81111561031b57600080fd5b6103278482850161029c565b949350505050565b60005b8381101561034a578181015183820152602001610332565b83811115610359576000848401525b50505050565b6000815180845261037781602086016020860161032f565b601f01601f19169290920160200192915050565b60808152600061039e608083018761035f565b82810360208401526103b0818761035f565b905082810360408401526103c4818661035f565b915050821515606083015295945050505050565b63ffffffff811681146103ea57600080fd5b50565b6000602082840312156103ff57600080fd5b813567ffffffffffffffff8082111561041757600080fd5b908301906040828603121561042b57600080fd5b61043361021a565b823561043e816103d8565b815260208301358281111561045257600080fd5b61045e8782860161029c565b60208301525095945050505050565b6000602080838503121561048057600080fd5b825167ffffffffffffffff8082111561049857600080fd5b818501915085601f8301126104ac57600080fd5b8151818111156104be576104be610204565b8060051b6104cd858201610243565b91825283810185019185810190898411156104e757600080fd5b86860192505b838310156105a6578251858111156105055760008081fd5b86016040818c03601f190181131561051d5760008081fd5b61052561021a565b89830151610532816103d8565b815282820151888111156105465760008081fd5b8084019350508c603f84011261055c5760008081fd5b8983015161056c6102bb82610274565b8181528e848387010111156105815760008081fd5b610590828d830186880161032f565b828c0152508452505091860191908601906104ed565b999850505050505050505056fe68747470733a2f2f64756d6d792e726573746170696578616d706c652e636f6d2f6170692f76312f656d706c6f7965657349732074686520656d706c6f796565206f766572203530207965617273206f6c64203fa26469706673582212209afbbff9c7067b373d283c1dbf0c57514188d257106c6e490b56ad72047a5cfa64736f6c63430008080033").unwrap()
        );
		InMemorySmartContractRepo { map }
	}
}

impl Default for InMemorySmartContractRepo {
	fn default() -> Self {
		Self::new()
	}
}

impl SmartContractRepository for InMemorySmartContractRepo {
	fn get(&self, id: &H160) -> Option<Vec<u8>> {
		self.map.get(id).cloned()
	}
}

fn hash(a: u64) -> H160 {
	H160::from_low_u64_be(a)
}
