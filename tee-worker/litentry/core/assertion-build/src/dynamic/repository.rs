// Copyright 2020-2024 Trust Computing GmbH.
// This file is part of Litentry.
//
// Litentry is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Litentry is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Litentry.  If not, see <https://www.gnu.org/licenses/>.

#[cfg(all(feature = "std", feature = "sgx"))]
compile_error!("feature \"std\" and feature \"sgx\" cannot be enabled at the same time");

#[cfg(all(not(feature = "std"), feature = "sgx"))]
extern crate sgx_tstd as std;

#[cfg(all(not(feature = "std"), feature = "sgx"))]
extern crate hex_sgx as hex;

use primitive_types::H160;
use std::{collections::HashMap, vec::Vec};

pub trait SmartContractRepository {
	fn get(&self, id: &H160) -> Option<Vec<u8>>;
}

pub struct InMemorySmartContractRepo {
	map: HashMap<H160, Vec<u8>>,
}

impl InMemorySmartContractRepo {
	pub fn new() -> Self {
		let mut map = HashMap::new();
		//a1
		map.insert(
            hash(0),
            hex::decode("608060405234801561001057600080fd5b50610af9806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806309c5eabe14610030575b600080fd5b61004361003e366004610589565b61005d565b604051610054959493929190610665565b60405180910390f35b6060806060806000808680602001905181019061007a91906107b9565b905061008581610098565b939b929a50909850965090945092505050565b60608060608060008060405180608001604052806045815260200161098b60459139604080518082018252601b81527f4261736963204964656e7469747920566572696669636174696f6e000000000060208083019190915260008054600181018255818052845160c08101909552608180865295965092947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390930193909290916109d0908301398051610154939250602090910190610458565b506040518060a0016040528060738152602001610a5160739139805161018291600191602090910190610458565b5060008080805b8b51811015610200576101b48c82815181106101a7576101a7610910565b602002602001015161038b565b156101c257600191506101ee565b6101e48c82815181106101d7576101d7610910565b60200260200101516103ba565b156101ee57600192505b806101f881610926565b915050610189565b5080801561020b5750815b92508484600060018682805480602002602001604051908101604052809291908181526020016000905b828210156102e15783829060005260206000200180546102549061094f565b80601f01602080910402602001604051908101604052809291908181526020018280546102809061094f565b80156102cd5780601f106102a2576101008083540402835291602001916102cd565b820191906000526020600020905b8154815290600101906020018083116102b057829003601f168201915b505050505081526020019060010190610235565b5050505092508180546102f39061094f565b80601f016020809104026020016040519081016040528092919081815260200182805461031f9061094f565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b5050505050915099509950995099509950505050505091939590929450565b6000610396826103e3565b806103a557506103a5826103f0565b806103b457506103b4826103fd565b92915050565b60006103c58261040a565b806103d457506103d482610417565b806103b457506103b482610424565b60006103b482600061042d565b60006103b482600161042d565b60006103b482600261042d565b60006103b482600361042d565b60006103b482600461042d565b60006103b48260055b60008163ffffffff16836000015163ffffffff16141561044f575060016103b4565b50600092915050565b8280546104649061094f565b90600052602060002090601f01602090048101928261048657600085556104cc565b82601f1061049f57805160ff19168380011785556104cc565b828001600101855582156104cc579182015b828111156104cc5782518255916020019190600101906104b1565b506104d89291506104dc565b5090565b5b808211156104d857600081556001016104dd565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561052a5761052a6104f1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610559576105596104f1565b604052919050565b600067ffffffffffffffff82111561057b5761057b6104f1565b50601f01601f191660200190565b60006020828403121561059b57600080fd5b813567ffffffffffffffff8111156105b257600080fd5b8201601f810184136105c357600080fd5b80356105d66105d182610561565b610530565b8181528560208385010111156105eb57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561062457818101518382015260200161060c565b83811115610633576000848401525b50505050565b60008151808452610651816020860160208601610609565b601f01601f19169290920160200192915050565b60a08152600061067860a0830188610639565b60208382038185015261068b8289610639565b915083820360408501528187518084528284019150828160051b850101838a0160005b838110156106dc57601f198784030185526106ca838351610639565b948601949250908501906001016106ae565b505086810360608801526106f0818a610639565b95505050505050610705608083018415159052565b9695505050505050565b600067ffffffffffffffff821115610729576107296104f1565b5060051b60200190565b805163ffffffff8116811461074757600080fd5b919050565b600082601f83011261075d57600080fd5b8151602061076d6105d18361070f565b82815260059290921b8401810191818101908684111561078c57600080fd5b8286015b848110156107ae576107a181610733565b8352918301918301610790565b509695505050505050565b600060208083850312156107cc57600080fd5b825167ffffffffffffffff808211156107e457600080fd5b818501915085601f8301126107f857600080fd5b81516108066105d18261070f565b81815260059190911b8301840190848101908883111561082557600080fd5b8585015b838110156109035780518581111561084057600080fd5b86016060818c03601f190112156108575760008081fd5b61085f610507565b61086a898301610733565b8152604080830151888111156108805760008081fd5b8301603f81018e136108925760008081fd5b8a8101516108a26105d182610561565b8181528f848385010111156108b75760008081fd5b6108c6828e8301868601610609565b848d015250506060830151888111156108df5760008081fd5b6108ed8e8c8387010161074c565b9183019190915250845250918601918601610829565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561094857634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061096357607f821691505b6020821081141561098457634e487b7160e01b600052602260045260246000fd5b5091905056fe596f75277665206964656e746966696564206174206c65617374206f6e65206163636f756e742f6164647265737320696e20626f7468205765623220616e6420576562332e7b22616e64223a205b7b2022737263223a2022246861735f776562325f6163636f756e74222c20226f70223a20223d3d222c2022647374223a20227472756522207d2c207b2022737263223a2022246861735f776562335f6163636f756e74222c20226f70223a20223d3d222c2022647374223a20227472756522207d205d207d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974656e7472792f76632d6a736f6e736368656d612f6d61696e2f646973742f736368656d61732f312d62617369632d6964656e746974792d766572696669636174696f6e2f312d302d302e6a736f6ea2646970667358221220244d5edbcb198356ad6aa3616440344e70c1990851937633185a1a8ed6dc6b1564736f6c63430008080033").unwrap()
        );
		//a20
		map.insert(
			hash(1),
			hex::decode("608060405234801561001057600080fd5b50610be5806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806309c5eabe14610030575b600080fd5b61004361003e3660046105b7565b61005d565b604051610054959493929190610693565b60405180910390f35b6060806060806000808680602001905181019061007a91906107e7565b905061008581610098565b939b929a50909850965090945092505050565b6060806060806000806040518060c0016040528060868152602001610ae260869139905060006040518060400160405280601c81526020017f49444875622045564d2056657273696f6e204561726c79204269726400000000815250905060405180604001604052806013815260200172246861735f6a6f696e6564203d3d207472756560681b815250600080815481106101355761013561093e565b906000526020600020019080519060200190610152929190610486565b506040518060a0016040528060758152602001610a6d60759139805161018091600191602090910190610486565b506000805b8951811015610272576101b08a82815181106101a3576101a361093e565b60200260200101516103ef565b156102075760006040518060c00160405280608681526020016109e76086913960408051808201909152600a8152690bda185cd29bda5b995960b21b60208201529091506101fe8282610402565b93505050610255565b6000604051806080016040528060488152602001610b686048913960408051808201909152600a8152690bda185cd29bda5b995960b21b60208201529091506102508282610402565b935050505b811561026057610272565b8061026a81610954565b915050610185565b508282600060018482805480602002602001604051908101604052809291908181526020016000905b828210156103475783829060005260206000200180546102ba9061097d565b80601f01602080910402602001604051908101604052809291908181526020018280546102e69061097d565b80156103335780601f1061030857610100808354040283529160200191610333565b820191906000526020600020905b81548152906001019060200180831161031657829003601f168201915b50505050508152602001906001019061029b565b5050505092508180546103599061097d565b80601f01602080910402602001604051908101604052809291908181526020018280546103859061097d565b80156103d25780601f106103a7576101008083540402835291602001916103d2565b820191906000526020600020905b8154815290600101906020018083116103b557829003601f168201915b505050505091509750975097509750975050505091939590929450565b60006103fc82600061045c565b92915050565b6000806000848460405160200161041a9291906109b8565b60408051601f19818403018152908290528051909250906020818382860160006103e9600019f161044a57600080fd5b60208101604052519695505050505050565b60008163ffffffff16836000015163ffffffff16141561047e575060016103fc565b5060006103fc565b8280546104929061097d565b90600052602060002090601f0160209004810192826104b457600085556104fa565b82601f106104cd57805160ff19168380011785556104fa565b828001600101855582156104fa579182015b828111156104fa5782518255916020019190600101906104df565b5061050692915061050a565b5090565b5b80821115610506576000815560010161050b565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156105585761055861051f565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105875761058761051f565b604052919050565b600067ffffffffffffffff8211156105a9576105a961051f565b50601f01601f191660200190565b6000602082840312156105c957600080fd5b813567ffffffffffffffff8111156105e057600080fd5b8201601f810184136105f157600080fd5b80356106046105ff8261058f565b61055e565b81815285602083850101111561061957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561065257818101518382015260200161063a565b83811115610661576000848401525b50505050565b6000815180845261067f816020860160208601610637565b601f01601f19169290920160200192915050565b60a0815260006106a660a0830188610667565b6020838203818501526106b98289610667565b915083820360408501528187518084528284019150828160051b850101838a0160005b8381101561070a57601f198784030185526106f8838351610667565b948601949250908501906001016106dc565b5050868103606088015261071e818a610667565b95505050505050610733608083018415159052565b9695505050505050565b600067ffffffffffffffff8211156107575761075761051f565b5060051b60200190565b805163ffffffff8116811461077557600080fd5b919050565b600082601f83011261078b57600080fd5b8151602061079b6105ff8361073d565b82815260059290921b840181019181810190868411156107ba57600080fd5b8286015b848110156107dc576107cf81610761565b83529183019183016107be565b509695505050505050565b600060208083850312156107fa57600080fd5b825167ffffffffffffffff8082111561081257600080fd5b818501915085601f83011261082657600080fd5b81516108346105ff8261073d565b81815260059190911b8301840190848101908883111561085357600080fd5b8585015b838110156109315780518581111561086e57600080fd5b86016060818c03601f190112156108855760008081fd5b61088d610535565b610898898301610761565b8152604080830151888111156108ae5760008081fd5b8301603f81018e136108c05760008081fd5b8a8101516108d06105ff8261058f565b8181528f848385010111156108e55760008081fd5b6108f4828e8301868601610637565b848d0152505060608301518881111561090d5760008081fd5b61091b8e8c8387010161077a565b9183019190915250845250918601918601610857565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561097657634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061099157607f821691505b602082108114156109b257634e487b7160e01b600052602260045260246000fd5b50919050565b6040815260006109cb6040830185610667565b82810360208401526109dd8185610667565b9594505050505056fe687474703a2f2f6c6f63616c686f73743a31393532372f6576656e74732f646f65732d757365722d6a6f696e65642d65766d2d63616d706169676e3f6163636f756e743d30786434333539336337313566646433316336313134316162643034613939666436383232633835353838353463636465333961353638346537613536646132376468747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974656e7472792f76632d6a736f6e736368656d612f6d61696e2f646973742f736368656d61732f31322d69646875622d65766d2d76657273696f6e2d6561726c792d626972642f312d302d302e6a736f6e546865207573657220697320616e206561726c7920626972642075736572206f6620746865204964656e746974794875622045564d2076657273696f6e20616e64206861732067656e657261746564206174206c6561737420312063726564656e7469616c20647572696e672032303233204175672031347468207e2041756720323173742e687474703a2f2f6c6f63616c686f73743a31393532372f6576656e74732f646f65732d757365722d6a6f696e65642d65766d2d63616d706169676e3f6163636f756e743d74657374a2646970667358221220cd9a6f2701718c25503e0c52b9d4f2f445a21a49a0165331fb060f25af0e45a664736f6c63430008080033").unwrap()
		);
		InMemorySmartContractRepo { map }
	}
}

impl Default for InMemorySmartContractRepo {
	fn default() -> Self {
		Self::new()
	}
}

impl SmartContractRepository for InMemorySmartContractRepo {
	fn get(&self, id: &H160) -> Option<Vec<u8>> {
		self.map.get(id).cloned()
	}
}

fn hash(a: u64) -> H160 {
	H160::from_low_u64_be(a)
}
