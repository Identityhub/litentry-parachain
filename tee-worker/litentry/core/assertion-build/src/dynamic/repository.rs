// Copyright 2020-2024 Trust Computing GmbH.
// This file is part of Litentry.
//
// Litentry is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Litentry is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Litentry.  If not, see <https://www.gnu.org/licenses/>.

#[cfg(all(feature = "std", feature = "sgx"))]
compile_error!("feature \"std\" and feature \"sgx\" cannot be enabled at the same time");

#[cfg(all(not(feature = "std"), feature = "sgx"))]
extern crate sgx_tstd as std;

#[cfg(all(not(feature = "std"), feature = "sgx"))]
extern crate hex_sgx as hex;

use primitive_types::H160;
use std::{collections::HashMap, vec::Vec};

pub trait SmartContractRepository {
	fn get(&self, id: &H160) -> Option<Vec<u8>>;
}

pub struct InMemorySmartContractRepo {
	map: HashMap<H160, Vec<u8>>,
}

impl InMemorySmartContractRepo {
	pub fn new() -> Self {
		let mut map = HashMap::new();
		//a1
		map.insert(
            hash(0),
            hex::decode("608060405234801561001057600080fd5b50610c2a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806309c5eabe1461003b5780637a36b3ee14610068575b600080fd5b61004e61004936600461061c565b610088565b60405161005f9594939291906106c9565b60405180910390f35b61007b61007636600461079a565b6100c3565b60405161005f91906107fe565b606080606080600080868060200190518101906100a591906108bb565b90506100b0816100f4565b939b929a50909850965090945092505050565b6060600083836040516020016100da929190610a12565b60408051601f198184030181529190529150505b92915050565b606080606080600080604051806080016040528060458152602001610abc60459139604080518082018252601b81527f4261736963204964656e7469747920566572696669636174696f6e000000000060208083019190915260008054600181018255818052845160c08101909552608180865295965092947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639093019390929091610b019083013980516101b09392506020909101906104ad565b506040518060a0016040528060738152602001610b826073913980516101de916001916020909101906104ad565b5060008080805b8b5181101561025c576102108c828151811061020357610203610a41565b60200260200101516103e7565b1561021e576001915061024a565b6102408c828151811061023357610233610a41565b6020026020010151610410565b1561024a57600192505b8061025481610a57565b9150506101e5565b508080156102675750815b92508484600060018682805480602002602001604051908101604052809291908181526020016000905b8282101561033d5783829060005260206000200180546102b090610a80565b80601f01602080910402602001604051908101604052809291908181526020018280546102dc90610a80565b80156103295780601f106102fe57610100808354040283529160200191610329565b820191906000526020600020905b81548152906001019060200180831161030c57829003601f168201915b505050505081526020019060010190610291565b50505050925081805461034f90610a80565b80601f016020809104026020016040519081016040528092919081815260200182805461037b90610a80565b80156103c85780601f1061039d576101008083540402835291602001916103c8565b820191906000526020600020905b8154815290600101906020018083116103ab57829003601f168201915b5050505050915099509950995099509950505050505091939590929450565b60006103f282610439565b80610401575061040182610446565b806100ee57506100ee82610453565b600061041b82610460565b8061042a575061042a8261046d565b806100ee57506100ee8261047a565b60006100ee826000610483565b60006100ee826001610483565b60006100ee826002610483565b60006100ee826003610483565b60006100ee826004610483565b60006100ee8260055b60008163ffffffff16836000015163ffffffff1614156104a5575060016100ee565b5060006100ee565b8280546104b990610a80565b90600052602060002090601f0160209004810192826104db5760008555610521565b82601f106104f457805160ff1916838001178555610521565b82800160010185558215610521579182015b82811115610521578251825591602001919060010190610506565b5061052d929150610531565b5090565b5b8082111561052d5760008155600101610532565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561057f5761057f610546565b60405290565b604051601f8201601f1916810167ffffffffffffffff811182821017156105ae576105ae610546565b604052919050565b600067ffffffffffffffff8211156105d0576105d0610546565b50601f01601f191660200190565b60006105f16105ec846105b6565b610585565b905082815283838301111561060557600080fd5b828260208301376000602084830101529392505050565b60006020828403121561062e57600080fd5b813567ffffffffffffffff81111561064557600080fd5b8201601f8101841361065657600080fd5b610665848235602084016105de565b949350505050565b60005b83811015610688578181015183820152602001610670565b83811115610697576000848401525b50505050565b600081518084526106b581602086016020860161066d565b601f01601f19169290920160200192915050565b60a0815260006106dc60a083018861069d565b6020838203818501526106ef828961069d565b915083820360408501528187518084528284019150828160051b850101838a0160005b8381101561074057601f1987840301855261072e83835161069d565b94860194925090850190600101610712565b50508681036060880152610754818a61069d565b95505050505050610769608083018415159052565b9695505050505050565b600082601f83011261078457600080fd5b610793838335602085016105de565b9392505050565b600080604083850312156107ad57600080fd5b823567ffffffffffffffff808211156107c557600080fd5b6107d186838701610773565b935060208501359150808211156107e757600080fd5b506107f485828601610773565b9150509250929050565b602081526000610793602083018461069d565b600067ffffffffffffffff82111561082b5761082b610546565b5060051b60200190565b805163ffffffff8116811461084957600080fd5b919050565b600082601f83011261085f57600080fd5b8151602061086f6105ec83610811565b82815260059290921b8401810191818101908684111561088e57600080fd5b8286015b848110156108b0576108a381610835565b8352918301918301610892565b509695505050505050565b600060208083850312156108ce57600080fd5b825167ffffffffffffffff808211156108e657600080fd5b818501915085601f8301126108fa57600080fd5b81516109086105ec82610811565b81815260059190911b8301840190848101908883111561092757600080fd5b8585015b83811015610a055780518581111561094257600080fd5b86016060818c03601f190112156109595760008081fd5b61096161055c565b61096c898301610835565b8152604080830151888111156109825760008081fd5b8301603f81018e136109945760008081fd5b8a8101516109a46105ec826105b6565b8181528f848385010111156109b95760008081fd5b6109c8828e830186860161066d565b848d015250506060830151888111156109e15760008081fd5b6109ef8e8c8387010161084e565b918301919091525084525091860191860161092b565b5098975050505050505050565b60008351610a2481846020880161066d565b835190830190610a3881836020880161066d565b01949350505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610a7957634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610a9457607f821691505b60208210811415610ab557634e487b7160e01b600052602260045260246000fd5b5091905056fe596f75277665206964656e746966696564206174206c65617374206f6e65206163636f756e742f6164647265737320696e20626f7468205765623220616e6420576562332e7b22616e64223a205b7b2022737263223a2022246861735f776562325f6163636f756e74222c20226f70223a20223d3d222c2022647374223a20227472756522207d2c207b2022737263223a2022246861735f776562335f6163636f756e74222c20226f70223a20223d3d222c2022647374223a20227472756522207d205d207d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974656e7472792f76632d6a736f6e736368656d612f6d61696e2f646973742f736368656d61732f312d62617369632d6964656e746974792d766572696669636174696f6e2f312d302d302e6a736f6ea2646970667358221220770fc82458ecd6b668db5c96651aa0189a525067eb47dadbced4bd8ebb91988664736f6c63430008080033").unwrap()
        );
		//a20
		map.insert(
			hash(1),
			hex::decode("608060405234801561001057600080fd5b50610c82806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806309c5eabe14610030575b600080fd5b61004361003e366004610657565b61005d565b604051610054959493929190610733565b60405180910390f35b6060806060806000808680602001905181019061007a9190610887565b905061008581610098565b939b929a50909850965090945092505050565b6060806060806000806040518060c0016040528060868152602001610b8e60869139604080518082018252601c81527f49444875622045564d2056657273696f6e204561726c7920426972640000000060208083019190915260008054600181018255818052845160608101909552603980865295965092947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639093019390929091610c14908301398051610154939250602090910190610526565b506040518060a0016040528060758152602001610b1960759139805161018291600191602090910190610526565b5060408051808201909152601381527274686973206973207465737420737472696e6760681b6020820152600090815b8a51811015610280576101dd8b82815181106101d0576101d06109de565b60200260200101516103fe565b1561026e5760006040518060400160405280600a8152602001690bda185cd29bda5b995960b21b815250905060006102318d8481518110610220576102206109de565b60200260200101516020015161042d565b60405160200161024191906109f4565b604051602081830303815290604052905061025c818361047f565b9450841561026b575050610280565b50505b8061027881610a6c565b9150506101b2565b508383600060018582805480602002602001604051908101604052809291908181526020016000905b828210156103555783829060005260206000200180546102c890610a95565b80601f01602080910402602001604051908101604052809291908181526020018280546102f490610a95565b80156103415780601f1061031657610100808354040283529160200191610341565b820191906000526020600020905b81548152906001019060200180831161032457829003601f168201915b5050505050815260200190600101906102a9565b50505050925081805461036790610a95565b80601f016020809104026020016040519081016040528092919081815260200182805461039390610a95565b80156103e05780601f106103b5576101008083540402835291602001916103e0565b820191906000526020600020905b8154815290600101906020018083116103c357829003601f168201915b50505050509150985098509850985098505050505091939590929450565b6000610409826104d9565b806104185750610418826104e6565b806104275750610427826104f3565b92915050565b60606000826040516020016104429190610ad0565b60408051601f198184030181529082905280519092509060a0818360208601600061041b600019f161047357600080fd5b60400151949350505050565b60008060008484604051602001610497929190610aea565b60408051601f19818403018152908290528051909250906020818382860160006103e9600019f16104c757600080fd5b60208101604052519695505050505050565b60006104278260036104fc565b60006104278260046104fc565b60006104278260055b60008163ffffffff16836000015163ffffffff16141561051e57506001610427565b506000610427565b82805461053290610a95565b90600052602060002090601f016020900481019282610554576000855561059a565b82601f1061056d57805160ff191683800117855561059a565b8280016001018555821561059a579182015b8281111561059a57825182559160200191906001019061057f565b506105a69291506105aa565b5090565b5b808211156105a657600081556001016105ab565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156105f8576105f86105bf565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610627576106276105bf565b604052919050565b600067ffffffffffffffff821115610649576106496105bf565b50601f01601f191660200190565b60006020828403121561066957600080fd5b813567ffffffffffffffff81111561068057600080fd5b8201601f8101841361069157600080fd5b80356106a461069f8261062f565b6105fe565b8181528560208385010111156106b957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156106f25781810151838201526020016106da565b83811115610701576000848401525b50505050565b6000815180845261071f8160208601602086016106d7565b601f01601f19169290920160200192915050565b60a08152600061074660a0830188610707565b6020838203818501526107598289610707565b915083820360408501528187518084528284019150828160051b850101838a0160005b838110156107aa57601f19878403018552610798838351610707565b9486019492509085019060010161077c565b505086810360608801526107be818a610707565b955050505050506107d3608083018415159052565b9695505050505050565b600067ffffffffffffffff8211156107f7576107f76105bf565b5060051b60200190565b805163ffffffff8116811461081557600080fd5b919050565b600082601f83011261082b57600080fd5b8151602061083b61069f836107dd565b82815260059290921b8401810191818101908684111561085a57600080fd5b8286015b8481101561087c5761086f81610801565b835291830191830161085e565b509695505050505050565b6000602080838503121561089a57600080fd5b825167ffffffffffffffff808211156108b257600080fd5b818501915085601f8301126108c657600080fd5b81516108d461069f826107dd565b81815260059190911b830184019084810190888311156108f357600080fd5b8585015b838110156109d15780518581111561090e57600080fd5b86016060818c03601f190112156109255760008081fd5b61092d6105d5565b610938898301610801565b81526040808301518881111561094e5760008081fd5b8301603f81018e136109605760008081fd5b8a81015161097061069f8261062f565b8181528f848385010111156109855760008081fd5b610994828e83018686016106d7565b848d015250506060830151888111156109ad5760008081fd5b6109bb8e8c8387010161081a565b91830191909152508452509186019186016108f7565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b7f687474703a2f2f6c6f63616c686f73743a31393532372f6576656e74732f646f81527f65732d757365722d6a6f696e65642d65766d2d63616d706169676e3f6163636f602082015263756e743d60e01b604082015260008251610a5f8160448501602087016106d7565b9190910160440192915050565b6000600019821415610a8e57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610aa957607f821691505b60208210811415610aca57634e487b7160e01b600052602260045260246000fd5b50919050565b602081526000610ae36020830184610707565b9392505050565b604081526000610afd6040830185610707565b8281036020840152610b0f8185610707565b9594505050505056fe68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974656e7472792f76632d6a736f6e736368656d612f6d61696e2f646973742f736368656d61732f31322d69646875622d65766d2d76657273696f6e2d6561726c792d626972642f312d302d302e6a736f6e546865207573657220697320616e206561726c7920626972642075736572206f6620746865204964656e746974794875622045564d2076657273696f6e20616e64206861732067656e657261746564206174206c6561737420312063726564656e7469616c20647572696e672032303233204175672031347468207e2041756720323173742e7b2022737263223a2022246861735f776562325f6163636f756e74222c20226f70223a20223d3d222c2022647374223a20227472756522207da26469706673582212201edb9cb70ee10885181ddcf309b820d504c83ffea2d19cdb95f7ff8e5d2c260264736f6c634300080c0033").unwrap()
		);
		InMemorySmartContractRepo { map }
	}
}

impl Default for InMemorySmartContractRepo {
	fn default() -> Self {
		Self::new()
	}
}

impl SmartContractRepository for InMemorySmartContractRepo {
	fn get(&self, id: &H160) -> Option<Vec<u8>> {
		self.map.get(id).cloned()
	}
}

fn hash(a: u64) -> H160 {
	H160::from_low_u64_be(a)
}
