// Copyright 2020-2024 Trust Computing GmbH.
// This file is part of Litentry.
//
// Litentry is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Litentry is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Litentry.  If not, see <https://www.gnu.org/licenses/>.

#[cfg(all(feature = "std", feature = "sgx"))]
compile_error!("feature \"std\" and feature \"sgx\" cannot be enabled at the same time");

#[cfg(all(not(feature = "std"), feature = "sgx"))]
extern crate sgx_tstd as std;

#[cfg(all(not(feature = "std"), feature = "sgx"))]
extern crate hex_sgx as hex;

use primitive_types::H160;
use std::{collections::HashMap, vec::Vec};

pub trait SmartContractRepository {
	fn get(&self, id: &H160) -> Option<Vec<u8>>;
}

pub struct InMemorySmartContractRepo {
	map: HashMap<H160, Vec<u8>>,
}

impl InMemorySmartContractRepo {
	pub fn new() -> Self {
		let mut map = HashMap::new();
		//a1
		map.insert(
            hash(0),
            hex::decode("608060405234801561001057600080fd5b50610af9806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806309c5eabe14610030575b600080fd5b61004361003e366004610589565b61005d565b604051610054959493929190610665565b60405180910390f35b6060806060806000808680602001905181019061007a91906107b9565b905061008581610098565b939b929a50909850965090945092505050565b60608060608060008060405180608001604052806045815260200161098b60459139604080518082018252601b81527f4261736963204964656e7469747920566572696669636174696f6e000000000060208083019190915260008054600181018255818052845160c08101909552608180865295965092947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56390930193909290916109d0908301398051610154939250602090910190610458565b506040518060a0016040528060738152602001610a5160739139805161018291600191602090910190610458565b5060008080805b8b51811015610200576101b48c82815181106101a7576101a7610910565b602002602001015161038b565b156101c257600191506101ee565b6101e48c82815181106101d7576101d7610910565b60200260200101516103ba565b156101ee57600192505b806101f881610926565b915050610189565b5080801561020b5750815b92508484600060018682805480602002602001604051908101604052809291908181526020016000905b828210156102e15783829060005260206000200180546102549061094f565b80601f01602080910402602001604051908101604052809291908181526020018280546102809061094f565b80156102cd5780601f106102a2576101008083540402835291602001916102cd565b820191906000526020600020905b8154815290600101906020018083116102b057829003601f168201915b505050505081526020019060010190610235565b5050505092508180546102f39061094f565b80601f016020809104026020016040519081016040528092919081815260200182805461031f9061094f565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b5050505050915099509950995099509950505050505091939590929450565b6000610396826103e3565b806103a557506103a5826103f0565b806103b457506103b4826103fd565b92915050565b60006103c58261040a565b806103d457506103d482610417565b806103b457506103b482610424565b60006103b482600061042d565b60006103b482600161042d565b60006103b482600261042d565b60006103b482600361042d565b60006103b482600461042d565b60006103b48260055b60008163ffffffff16836000015163ffffffff16141561044f575060016103b4565b50600092915050565b8280546104649061094f565b90600052602060002090601f01602090048101928261048657600085556104cc565b82601f1061049f57805160ff19168380011785556104cc565b828001600101855582156104cc579182015b828111156104cc5782518255916020019190600101906104b1565b506104d89291506104dc565b5090565b5b808211156104d857600081556001016104dd565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561052a5761052a6104f1565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610559576105596104f1565b604052919050565b600067ffffffffffffffff82111561057b5761057b6104f1565b50601f01601f191660200190565b60006020828403121561059b57600080fd5b813567ffffffffffffffff8111156105b257600080fd5b8201601f810184136105c357600080fd5b80356105d66105d182610561565b610530565b8181528560208385010111156105eb57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561062457818101518382015260200161060c565b83811115610633576000848401525b50505050565b60008151808452610651816020860160208601610609565b601f01601f19169290920160200192915050565b60a08152600061067860a0830188610639565b60208382038185015261068b8289610639565b915083820360408501528187518084528284019150828160051b850101838a0160005b838110156106dc57601f198784030185526106ca838351610639565b948601949250908501906001016106ae565b505086810360608801526106f0818a610639565b95505050505050610705608083018415159052565b9695505050505050565b600067ffffffffffffffff821115610729576107296104f1565b5060051b60200190565b805163ffffffff8116811461074757600080fd5b919050565b600082601f83011261075d57600080fd5b8151602061076d6105d18361070f565b82815260059290921b8401810191818101908684111561078c57600080fd5b8286015b848110156107ae576107a181610733565b8352918301918301610790565b509695505050505050565b600060208083850312156107cc57600080fd5b825167ffffffffffffffff808211156107e457600080fd5b818501915085601f8301126107f857600080fd5b81516108066105d18261070f565b81815260059190911b8301840190848101908883111561082557600080fd5b8585015b838110156109035780518581111561084057600080fd5b86016060818c03601f190112156108575760008081fd5b61085f610507565b61086a898301610733565b8152604080830151888111156108805760008081fd5b8301603f81018e136108925760008081fd5b8a8101516108a26105d182610561565b8181528f848385010111156108b75760008081fd5b6108c6828e8301868601610609565b848d015250506060830151888111156108df5760008081fd5b6108ed8e8c8387010161074c565b9183019190915250845250918601918601610829565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060001982141561094857634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061096357607f821691505b6020821081141561098457634e487b7160e01b600052602260045260246000fd5b5091905056fe596f75277665206964656e746966696564206174206c65617374206f6e65206163636f756e742f6164647265737320696e20626f7468205765623220616e6420576562332e7b22616e64223a205b7b2022737263223a2022246861735f776562325f6163636f756e74222c20226f70223a20223d3d222c2022647374223a20227472756522207d2c207b2022737263223a2022246861735f776562335f6163636f756e74222c20226f70223a20223d3d222c2022647374223a20227472756522207d205d207d68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974656e7472792f76632d6a736f6e736368656d612f6d61696e2f646973742f736368656d61732f312d62617369632d6964656e746974792d766572696669636174696f6e2f312d302d302e6a736f6ea26469706673582212204f3a01d6e795ee4a8254e45b22b9213130a0ec68cb54371e4bf23de373793fae64736f6c63430008080033").unwrap()
        );
		//a20
		map.insert(
			hash(1),
			hex::decode("608060405234801561001057600080fd5b50610c7d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806309c5eabe14610030575b600080fd5b61004361003e366004610657565b61005d565b604051610054959493929190610733565b60405180910390f35b6060806060806000808680602001905181019061007a9190610887565b905061008581610098565b939b929a50909850965090945092505050565b6060806060806000806040518060c0016040528060868152602001610b4560869139604080518082018252601c81527f49444875622045564d2056657273696f6e204561726c7920426972640000000060208083019190915260008054600181018255818052845160608101909552603980865295965092947f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639093019390929091610c0f908301398051610154939250602090910190610526565b506040518060a0016040528060758152602001610ad060759139805161018291600191602090910190610526565b506000805b8951811015610259576101b28a82815181106101a5576101a56109de565b60200260200101516103d6565b156102475760006101df8b83815181106101ce576101ce6109de565b602002602001015160200151610405565b90506000610205604051806080016040528060448152602001610bcb6044913983610450565b60408051808201909152600a8152690bda185cd29bda5b995960b21b6020820152909150610233828261047f565b9450841561024357505050610259565b5050505b80610251816109f4565b915050610187565b508282600060018482805480602002602001604051908101604052809291908181526020016000905b8282101561032e5783829060005260206000200180546102a190610a1d565b80601f01602080910402602001604051908101604052809291908181526020018280546102cd90610a1d565b801561031a5780601f106102ef5761010080835404028352916020019161031a565b820191906000526020600020905b8154815290600101906020018083116102fd57829003601f168201915b505050505081526020019060010190610282565b50505050925081805461034090610a1d565b80601f016020809104026020016040519081016040528092919081815260200182805461036c90610a1d565b80156103b95780601f1061038e576101008083540402835291602001916103b9565b820191906000526020600020905b81548152906001019060200180831161039c57829003601f168201915b505050505091509750975097509750975050505091939590929450565b60006103e1826104d9565b806103f057506103f0826104e6565b806103ff57506103ff826104f3565b92915050565b606060008260405160200161041a9190610a58565b60408051601f1981840301815291905280519091506082838260208501600061041b600019f161044957600080fd5b5050919050565b606060008383604051602001610467929190610a72565b60408051808303601f19018152919052949350505050565b60008060008484604051602001610497929190610aa1565b60408051601f19818403018152908290528051909250906020818382860160006103e9600019f16104c757600080fd5b60208101604052519695505050505050565b60006103ff8260036104fc565b60006103ff8260046104fc565b60006103ff8260055b60008163ffffffff16836000015163ffffffff16141561051e575060016103ff565b5060006103ff565b82805461053290610a1d565b90600052602060002090601f016020900481019282610554576000855561059a565b82601f1061056d57805160ff191683800117855561059a565b8280016001018555821561059a579182015b8281111561059a57825182559160200191906001019061057f565b506105a69291506105aa565b5090565b5b808211156105a657600081556001016105ab565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156105f8576105f86105bf565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610627576106276105bf565b604052919050565b600067ffffffffffffffff821115610649576106496105bf565b50601f01601f191660200190565b60006020828403121561066957600080fd5b813567ffffffffffffffff81111561068057600080fd5b8201601f8101841361069157600080fd5b80356106a461069f8261062f565b6105fe565b8181528560208385010111156106b957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156106f25781810151838201526020016106da565b83811115610701576000848401525b50505050565b6000815180845261071f8160208601602086016106d7565b601f01601f19169290920160200192915050565b60a08152600061074660a0830188610707565b6020838203818501526107598289610707565b915083820360408501528187518084528284019150828160051b850101838a0160005b838110156107aa57601f19878403018552610798838351610707565b9486019492509085019060010161077c565b505086810360608801526107be818a610707565b955050505050506107d3608083018415159052565b9695505050505050565b600067ffffffffffffffff8211156107f7576107f76105bf565b5060051b60200190565b805163ffffffff8116811461081557600080fd5b919050565b600082601f83011261082b57600080fd5b8151602061083b61069f836107dd565b82815260059290921b8401810191818101908684111561085a57600080fd5b8286015b8481101561087c5761086f81610801565b835291830191830161085e565b509695505050505050565b6000602080838503121561089a57600080fd5b825167ffffffffffffffff808211156108b257600080fd5b818501915085601f8301126108c657600080fd5b81516108d461069f826107dd565b81815260059190911b830184019084810190888311156108f357600080fd5b8585015b838110156109d15780518581111561090e57600080fd5b86016060818c03601f190112156109255760008081fd5b61092d6105d5565b610938898301610801565b81526040808301518881111561094e5760008081fd5b8301603f81018e136109605760008081fd5b8a81015161097061069f8261062f565b8181528f848385010111156109855760008081fd5b610994828e83018686016106d7565b848d015250506060830151888111156109ad5760008081fd5b6109bb8e8c8387010161081a565b91830191909152508452509186019186016108f7565b5098975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600019821415610a1657634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c90821680610a3157607f821691505b60208210811415610a5257634e487b7160e01b600052602260045260246000fd5b50919050565b602081526000610a6b6020830184610707565b9392505050565b60008351610a848184602088016106d7565b835190830190610a988183602088016106d7565b01949350505050565b604081526000610ab46040830185610707565b8281036020840152610ac68185610707565b9594505050505056fe68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6c6974656e7472792f76632d6a736f6e736368656d612f6d61696e2f646973742f736368656d61732f31322d69646875622d65766d2d76657273696f6e2d6561726c792d626972642f312d302d302e6a736f6e546865207573657220697320616e206561726c7920626972642075736572206f6620746865204964656e746974794875622045564d2076657273696f6e20616e64206861732067656e657261746564206174206c6561737420312063726564656e7469616c20647572696e672032303233204175672031347468207e2041756720323173742e687474703a2f2f6c6f63616c686f73743a31393532372f6576656e74732f646f65732d757365722d6a6f696e65642d65766d2d63616d706169676e3f6163636f756e743d7b2022737263223a2022246861735f776562325f6163636f756e74222c20226f70223a20223d3d222c2022647374223a20227472756522207da2646970667358221220396141c723d6eaf9909398113b32e22b626043eda8c7eb319640990e535012c564736f6c63430008080033").unwrap()
		);
		InMemorySmartContractRepo { map }
	}
}

impl Default for InMemorySmartContractRepo {
	fn default() -> Self {
		Self::new()
	}
}

impl SmartContractRepository for InMemorySmartContractRepo {
	fn get(&self, id: &H160) -> Option<Vec<u8>> {
		self.map.get(id).cloned()
	}
}

fn hash(a: u64) -> H160 {
	H160::from_low_u64_be(a)
}
