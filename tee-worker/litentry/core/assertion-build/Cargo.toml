[package]
authors = ["Trust Computing GmbH <info@litentry.com>"]
edition = "2021"
name = "lc-assertion-build"
version = "0.1.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# std dependencies
blake2-rfc = { workspace = true }
hex = { workspace = true, optional = true }
http = { workspace = true, optional = true }
http_req = { optional = true, workspace = true }
rust-base58 = { workspace = true, optional = true }
ss58-registry = { workspace = true }

# sgx dependencies
hex-sgx = { workspace = true, optional = true }
http-sgx = { workspace = true, optional = true }
http_req-sgx = { optional = true, workspace = true }
rust-base58-sgx = { workspace = true, optional = true }
sgx_tstd = { workspace = true, optional = true, features = ["net", "thread"] }
thiserror_sgx = { workspace = true, optional = true }
url_sgx = { workspace = true, optional = true }

# no_std dependencies
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
log = { workspace = true }
serde = { workspace = true, features = ["derive", "alloc"] }
serde_json = { workspace = true }

# internal dependencies
itc-rest-client = { workspace = true }
itp-ocall-api = { workspace = true }
itp-stf-primitives = { workspace = true }
itp-types = { workspace = true }
itp-utils = { workspace = true }

frame-support = { workspace = true }

hex-literal = { workspace = true }
sp-core = { workspace = true }

# litentry
lc-credentials = { path = "../credentials", default-features = false }
lc-data-providers = { workspace = true }
lc-stf-task-sender = { workspace = true }
litentry-primitives = { workspace = true }
pallet-parachain-staking = { workspace = true }

[dev-dependencies]
env_logger = { workspace = true }
lc-mock-server = { workspace = true }
litentry-hex-utils = { workspace = true }

[features]
default = ["std"]
sgx = [
    "hex-sgx",
    "http-sgx",
    "http_req-sgx",
    "rust-base58-sgx",
    "itc-rest-client/sgx",
    "sgx_tstd",
    "thiserror_sgx",
    "url_sgx",
    "litentry-primitives/sgx",
    "lc-stf-task-sender/sgx",
    "lc-credentials/sgx",
    "lc-data-providers/sgx",
]
std = [
    "hex",
    "http",
    "http_req",
    "itc-rest-client/std",
    "log/std",
    "serde/std",
    "serde_json/std",
    "rust-base58",
    "itp-types/std",
    "itp-utils/std",
    "frame-support/std",
    "litentry-primitives/std",
    "lc-stf-task-sender/std",
    "lc-credentials/std",
    "lc-data-providers/std",
]
