[package]
authors = ["Trust Computing GmbH <info@litentry.com>"]
edition = "2021"
name = "lc-data-providers"
version = "0.1.0"


[dependencies]
# std dependencies
chrono = { workspace = true, optional = true }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
http = { workspace = true, optional = true }
http_req = { optional = true, workspace = true }
thiserror = { workspace = true, optional = true }
url = { workspace = true, optional = true }

# no_std dependencies
log = { workspace = true }
serde = { workspace = true, features = ["derive", "alloc"] }
serde_json = { workspace = true, features = ["alloc"] }

# internal dependencies
itc-rest-client = { workspace = true }
itp-rpc = { workspace = true }
itp-utils = { workspace = true }

# sgx dependencies
chrono_sgx = { workspace = true, optional = true }
hex-sgx = { workspace = true, optional = true }
http-sgx = { workspace = true, optional = true }
http_req-sgx = { workspace = true, optional = true }
sgx_tstd = { workspace = true, features = ["net", "thread"], optional = true }
thiserror_sgx = { workspace = true, optional = true }
url_sgx = { workspace = true, optional = true }

# litentry
litentry-macros = { workspace = true }
litentry-primitives = { workspace = true }

[dev-dependencies]
env_logger = { workspace = true }
lc-mock-server = { workspace = true }
itp-stf-primitives = { workspace = true }

[features]
default = ["std"]
sgx = [
    "hex-sgx",
    "http-sgx",
    "http_req-sgx",
    "thiserror_sgx",
    "url_sgx",
    "sgx_tstd",
    "chrono_sgx",
    "itc-rest-client/sgx",
    "litentry-primitives/sgx",
]
std = [
    "http",
    "http_req",
    "thiserror",
    "url",
    "itc-rest-client/std",
    "itp-rpc/std",
    "itp-utils/std",
    "log/std",
    "serde/std",
    "serde_json/std",
    "litentry-primitives/std",
    "chrono",
]
production = [
    "litentry-macros/production",
]
