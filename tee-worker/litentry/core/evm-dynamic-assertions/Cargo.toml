[package]
name = "lc-evm-dynamic-assertions"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
# std dependecies
hex = { version = "0.4.3", optional = true }
http = { version = "0.2", optional = true }


# sgx dependencies
hex-sgx = { package = "hex", git = "https://github.com/mesalock-linux/rust-hex-sgx", tag = "sgx_1.1.3", features = ["sgx_tstd"], optional = true }
http-sgx = { package = "http", git = "https://github.com/integritee-network/http-sgx.git", branch = "sgx-experimental", optional = true }
sgx_tstd = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }


# no std
ethabi = { version = "18.0.0", default-features = false }
evm = { version = "0.41.1", default-features = false, features = ["with-codec"] }
serde_json = { version = "1.0", default-features = false, features = ["alloc"] }


# local
itc-rest-client = { path = "../../../core/rest-client", default-features = false }
lc-dynamic-assertion = { path = "../dynamic-assertion", default-features = false }

[dev-dependencies]
http_req = { features = ["rust-tls"], branch = "master", git = "https://github.com/integritee-network/http_req" }
litentry-primitives = { path = "../../primitives" }


[features]
default = ["std"]
std = [
    "lc-dynamic-assertion/std",
    "itc-rest-client/std",
    "serde_json/std",
    "hex",
    "http",
]
sgx = [
    "sgx_tstd",
    "hex-sgx",
    "http-sgx",
    "lc-dynamic-assertion/sgx",
    "itc-rest-client/sgx",
]
