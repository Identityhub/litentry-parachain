[workspace]

members = [
    "app-libs/parentchain-interface",
    "app-libs/sgx-runtime",
    "app-libs/stf",
    "cli",
    "core/direct-rpc-client",
    "core/direct-rpc-server",
    "core/peer-top-broadcaster",
    "core/offchain-worker-executor",
    "core/parentchain/block-import-dispatcher",
    "core/parentchain/block-importer",
    "core/parentchain/indirect-calls-executor",
    "core/parentchain/light-client",
    "core/parentchain/parentchain-crate",
    "core/rest-client",
    "core/rpc-client",
    "core/rpc-server",
    "core/tls-websocket-server",
    "core-primitives/attestation-handler",
    "core-primitives/import-queue",
    "core-primitives/component-container",
    "core-primitives/enclave-api",
    "core-primitives/enclave-api/ffi",
    "core-primitives/enclave-metrics",
    "core-primitives/extrinsics-factory",
    "core-primitives/hashing",
    "core-primitives/networking-utils",
    "core-primitives/node-api",
    "core-primitives/node-api/api-client-extensions",
    "core-primitives/node-api/api-client-types",
    "core-primitives/node-api/factory",
    "core-primitives/node-api/metadata",
    "core-primitives/node-api/metadata-provider",
    "core-primitives/nonce-cache",
    "core-primitives/ocall-api",
    "core-primitives/primitives-cache",
    "core-primitives/rpc",
    "core-primitives/settings",
    "core-primitives/sgx/crypto",
    "core-primitives/sgx/io",
    "core-primitives/sgx-runtime-primitives",
    "core-primitives/stf-executor",
    "core-primitives/stf-interface",
    "core-primitives/stf-primitives",
    "core-primitives/stf-state-handler",
    "core-primitives/stf-state-observer",
    "core-primitives/storage",
    "core-primitives/substrate-sgx/environmental",
    "core-primitives/substrate-sgx/externalities",
    "core-primitives/substrate-sgx/sp-io",
    "core-primitives/teerex-storage",
    "core-primitives/test",
    "core-primitives/time-utils",
    "core-primitives/top-pool",
    "core-primitives/top-pool-author",
    "core-primitives/types",
    "core-primitives/utils",
    "service",
    "sidechain/block-composer",
    "sidechain/block-verification",
    "sidechain/consensus/aura",
    "sidechain/consensus/common",
    "sidechain/consensus/slots",
    "sidechain/fork-tree",
    "sidechain/peer-fetch",
    "sidechain/primitives",
    "sidechain/rpc-handler",
    "sidechain/sidechain-crate",
    "sidechain/state",
    "sidechain/validateer-fetch",
    "litentry/primitives",
    "litentry/pallets/identity-management",
    "litentry/core/stf-task/sender",
    "litentry/core/stf-task/receiver",
    "litentry/core/identity-verification",
    "litentry/core/assertion-build",
    "litentry/core/data-providers",
    "litentry/core/mock-server",
    "litentry/core/vc-issuance/lc-vc-task-sender",
    "litentry/core/vc-issuance/lc-vc-task-receiver",
]

[workspace.dependencies]
# Internal dependencies
lc-scheduled-enclave = { path = "litentry/core/scheduled-enclave", default-features = false }
ita-sgx-runtime = { path = "app-libs/sgx-runtime", default-features = false }
ita-stf = { path = "app-libs/stf", default-features = false }
litentry-hex-utils = { path = "../primitives/hex", default-features = false }
litentry-primitives = { path = "litentry/primitives", default-features = false }
itp-node-api = { path = "core-primitives/node-api", default-features = false }
itp-sgx-crypto = { path = "core-primitives/sgx/crypto", default-features = false }
itp-stf-executor = { path = "core-primitives/stf-executor", default-features = false }
itp-stf-interface = { default-features = false, path = "core-primitives/stf-interface" }
itp-stf-primitives = { default-features = false, path = "core-primitives/stf-primitives" }
itp-storage = { default-features = false, path = "core-primitives/storage" }
itp-test = { path = "core-primitives/test", default-features = false }
itp-top-pool-author = { path = "core-primitives/top-pool-author", default-features = false }
itc-parentchain-test = { path = "core/parentchain/test", default-features = false }
itc-parentchain-indirect-calls-executor = { path = "core/parentchain/indirect-calls-executor", default-features = false }
itp-api-client-types = { path = "core-primitives/node-api/api-client-types", default-features = false }
itp-types = { path = "core-primitives/types", default-features = false }
itp-utils = { path = "core-primitives/utils", default-features = false }
itp-sgx-runtime-primitives = { path = "core-primitives/sgx-runtime-primitives", default-features = false }
itp-node-api-metadata = { default-features = false, path = "core-primitives/node-api/metadata" }
itp-sgx-externalities = { default-features = false, path = "core-primitives/substrate-sgx/externalities" }
itp-hashing = { default-features = false, path = "core-primitives/hashing" }
sp-io = { default-features = false, features = ["disable_oom", "disable_panic_handler", "disable_allocator"], path = "core-primitives/substrate-sgx/sp-io" }
itp-node-api-metadata-provider = { path = "core-primitives/node-api/metadata-provider", default-features = false }
itc-rpc-client = { path = "core/rpc-client", default-features = false }
itp-rpc = { path = "core-primitives/rpc", default-features = false }
itp-time-utils = { path = "core-primitives/time-utils", default-features = false }
itc-tls-websocket-server = { path = "core/tls-websocket-server", default-features = false }
itp-extrinsics-factory = { path = "core-primitives/extrinsics-factory", default-features = false }
itc-parentchain-light-client = { path = "core/parentchain/light-client", default-features = false }
itp-stf-state-handler = { path = "core-primitives/stf-state-handler", default-features = false }
itc-parentchain-block-importer = { path = "core/parentchain/block-importer", default-features = false }
pallet-parentchain = { path = "../pallets/parentchain", default-features = false }
itp-import-queue = { path = "core-primitives/import-queue", default-features = false }
itp-ocall-api = { path = "core-primitives/ocall-api", default-features = false }
itp-enclave-metrics = { path = "core-primitives/enclave-metrics", default-features = false }
parachain-core-primitives = { package = "core-primitives", path = "../primitives/core", default-features = false }
itp-sgx-io = { path = "core-primitives/sgx/io", default-features = false }
itp-sgx-temp-dir = { version = "0.1", default-features = false, path = "core-primitives/sgx/temp-dir" }
itc-parentchain-block-import-dispatcher = { path = "core/parentchain/block-import-dispatcher", default-features = false }
itc-direct-rpc-client = { path = "core/direct-rpc-client", default-features = false }
itc-direct-rpc-server = { path = "core/direct-rpc-server", default-features = false }
itp-networking-utils = { path = "core-primitives/networking-utils" }
its-storage = { path = "sidechain/storage" }
its-rpc-handler = { path = "sidechain/rpc-handler" }
its-primitives = { path = "sidechain/primitives", default-features = false }
its-peer-fetch = { path = "sidechain/peer-fetch" }
itp-enclave-api = { path = "core-primitives/enclave-api" }
itp-settings = { path = "core-primitives/settings" }
itc-parentchain = { path = "core/parentchain/parentchain-crate" }
itp-enclave-api-ffi = { path = "core-primitives/enclave-api/ffi" }
itp-nonce-cache = { path = "core-primitives/nonce-cache", default-features = false }
itp-stf-state-observer = { path = "core-primitives/stf-state-observer", default-features = false }
itp-top-pool = { path = "core-primitives/top-pool", default-features = false }
itp-api-client-extensions = { path = "core-primitives/node-api/api-client-extensions" }
itp-node-api-factory = { path = "core-primitives/node-api/factory", default-features = false }
itc-rest-client = { path = "core/rest-client", default-features = false }
itc-peer-top-broadcaster = { path = "core/peer-top-broadcaster", default-features = false }

lc-stf-task-sender = { path = "litentry/core/stf-task/sender", default-features = false }
litentry-macros = { path = "../primitives/core/macros", default-features = false }
lc-credentials = { path = "litentry/core/credentials" }
lc-teebag-storage = { path = "litentry/core/teebag-storage", default-features = false }
lc-data-providers = { path = "litentry/core/data-providers", default-features = false }
pallet-parachain-staking = { path = "../pallets/parachain-staking", default-features = false }
lc-mock-server = { path = "litentry/core/mock-server" }
lc-service = { path = "litentry/core/service", default-features = false }
# lc-credentials-v2 = { path = "litentry/core/credentials-v2", default-features = false }
lc-common = { path = "litentry/core/common", default-features = false }
lc-assertion-build = { path = "litentry/core/assertion-build", default-features = false }

sgx_tstd = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
bs58 = { version = "0.4.0", default-features = false, features = ["alloc"] }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
log = { version = "0.4", default-features = false }
env_logger = "0.9.0"
hex = { version = "0.4", default-features = false }
hex-literal = { version = "0.4", default-features = false }
rlp = { version = "0.5", default-features = false }
sha3 = { version = "0.10", default-features = false }
array-bytes = { version = "6.0.0" }
base58 = "0.2"
base64 = { version = "0.13", default-features = false, features = ["alloc"] }
clap = { version = "=4.1.0", features = ["derive"] }
hdrhistogram = "7.5.0"
rand = "0.8.5"
rayon = "1.5.1"
regex = "1.9.5"
reqwest = { version = "0.11", features = ["blocking", "json"] }
serde = { version = "1.0", default-features = false }
serde_json = { version = "1.0", default-features = false }
sgx_crypto_helper = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
thiserror = "1.0"
urlencoding = "2.1.3"
rustls = { version = "0.19", features = ["dangerous_configuration"] }
tungstenite = { version = "0.15.0", features = ["rustls-tls-webpki-roots"] }
url = { version = "2.0.0" }
webpki = { version = "0.21" }
jsonrpc-core = { version = "18", default-features = false }
futures = { version = "0.3.8", default-features = false }
http_req = { features = ["rust-tls"], branch = "master", git = "https://github.com/integritee-network/http_req" }
parking_lot = "0.12.1"
openssl = { version = "0.10" }
ws = { version = "0.9.1", features = ["ssl"] }
jsonrpsee = { version = "0.2.0-alpha.7", features = ["full"] }
anyhow = "1.0.40"
tokio = { version = "1.6.1", features = ["full"] }
mio = { version = "0.6.14" }
yasna = { version = "0.4", features = ["bit-vec", "num-bigint", "chrono", "std"] }
rcgen = { package = "rcgen", default-features = false, git = "https://github.com/integritee-network/rcgen" }
chrono = { version = "0.4.19", default-features = false, features = ["alloc"] }
bit-vec = { version = "0.6", default-features = false }
arrayvec = { version = "0.7.1", default-features = false }
itertools = { default-features = false, version = "0.10.1" }
httparse = { default-features = false, git = "https://github.com/integritee-network/httparse-sgx", branch = "sgx-experimental" }
derive_more = { version = "0.99.5" }
lazy_static = { version = "1.1.0", default-features = false }
linked-hash-map = { version = "0.5.2" }
byteorder = { version = "1.4.2", default-features = false }
aes = { version = "0.6.0", default-features = false }
ofb = { version = "0.4.0", default-features = false }
blake2-rfc = { version = "0.2.18", default-features = false }
rust-base58 = { package = "rust-base58", version = "0.0.4", default-features = false }
ss58-registry = { version = "1.40", default-features = false }
http = { version = "0.2", default-features = false }
warp = "0.3"
threadpool = { version = "1.8.0", default-features = false }

mio-extras = { default-features = false, git = "https://github.com/integritee-network/mio-extras-sgx", rev = "963234b" }
mio_sgx = { package = "mio", git = "https://github.com/mesalock-linux/mio-sgx", tag = "sgx_1.1.3" }
yasna_sgx = { package = "yasna", default-features = false, features = ["bit-vec", "num-bigint", "chrono", "mesalock_sgx"], git = "https://github.com/mesalock-linux/yasna.rs-sgx", rev = "sgx_1.1.3" }
rustls_sgx = { package = "rustls", git = "https://github.com/mesalock-linux/rustls", tag = "sgx_1.1.3", features = ["dangerous_configuration"] }
tungstenite_sgx = { package = "tungstenite", git = "https://github.com/integritee-network/tungstenite-rs-sgx", branch = "sgx-experimental", features = ["rustls-tls-webpki-roots"] }
url_sgx = { package = "url", git = "https://github.com/mesalock-linux/rust-url-sgx", tag = "sgx_1.1.3" }
webpki_sgx = { package = "webpki", git = "https://github.com/mesalock-linux/webpki", branch = "mesalock_sgx" }
jsonrpc-core_sgx = { package = "jsonrpc-core", git = "https://github.com/scs/jsonrpc", branch = "no_std_v18", default-features = false }
thiserror_sgx = { package = "thiserror", git = "https://github.com/mesalock-linux/thiserror-sgx", tag = "sgx_1.1.3" }
sgx_types = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", default-features = false }
futures_sgx = { package = "futures", git = "https://github.com/mesalock-linux/futures-rs-sgx", default-features = false }
http_req-sgx = { default-features = false, features = ["rust-tls", "sgx"], package = "http_req", git = "https://github.com/integritee-network/http_req" }
http-sgx = { package = "http", git = "https://github.com/integritee-network/http-sgx.git", branch = "sgx-experimental" }
base64_sgx = { package = "base64", rev = "sgx_1.1.3", git = "https://github.com/mesalock-linux/rust-base64-sgx" }
chrono_sgx = { package = "chrono", git = "https://github.com/mesalock-linux/chrono-sgx" }
num-bigint = { git = "https://github.com/mesalock-linux/num-bigint-sgx" }
webpki-roots = { git = "https://github.com/mesalock-linux/webpki-roots", branch = "mesalock_sgx" }
serde_json_sgx = { package = "serde_json", tag = "sgx_1.1.3", features = ["preserve_order"], git = "https://github.com/mesalock-linux/serde-json-sgx" }
sgx_rand = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tcrypto = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tse = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx-crypto-helper = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", package = "sgx_crypto_helper", default-features = false }
linked-hash-map_sgx = { package = "linked-hash-map", git = "https://github.com/mesalock-linux/linked-hash-map-sgx" }
hex-sgx = { package = "hex", git = "https://github.com/mesalock-linux/rust-hex-sgx", tag = "sgx_1.1.3", features = ["sgx_tstd"] }
rust-base58-sgx = { git = "https://github.com/mesalock-linux/rust-base58-sgx", package = "rust-base58", features = ["mesalock_sgx"] }
rand-sgx = { package = "rand", git = "https://github.com/mesalock-linux/rand-sgx", tag = "sgx_1.1.3", features = ["sgx_tstd"] }
threadpool_sgx = { git = "https://github.com/mesalock-linux/rust-threadpool-sgx", package = "threadpool", tag = "sgx_1.1.3" }


# Substrate dependencies
scale-info = { version = "2.0.1", default-features = false, features = ["derive"] }
sp-core = { default-features = false, features = ["full_crypto"], git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-runtime = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-std = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
frame-executive = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
frame-support = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
frame-system = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
pallet-balances = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
pallet-sudo = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
pallet-timestamp = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
pallet-transaction-payment = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-api = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-version = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-keyring = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-application-crypto = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-keystore = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
substrate-api-client = { default-features = false, git = "https://github.com/scs/substrate-api-client.git", branch = "polkadot-v0.9.42-tag-v0.14.0" }
substrate-client-keystore = { git = "https://github.com/scs/substrate-api-client.git", branch = "polkadot-v0.9.42-tag-v0.14.0" }
frame-metadata = "15.0.0"
sp-core-hashing = "6.0.0"
scale-value = "0.6.0"
pallet-teerex = { path = "../pallets/teerex", default-features = false }
binary-merkle-tree = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-consensus-grandpa = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
finality-grandpa = { version = "0.16.0", default-features = false, features = ["derive-codec"] }
sgx_urts = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
substrate-fixed = { default-features = false, git = "https://github.com/encointer/substrate-fixed", tag = "v0.5.9" }
sp-trie = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
sp-state-machine = { git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.42" }
parity-util-mem = { version = "0.12.0", default-features = false, features = ["primitive-types"] }


# Integritee depdendencies 
pallet-evm = { default-features = false, git = "https://github.com/integritee-network/frontier.git", branch = "bar/polkadot-v0.9.42" }


[patch."https://github.com/apache/teaclave-sgx-sdk.git"]
sgx_alloc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_crypto_helper = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_libc = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_rand = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tcrypto = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_trts = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_tstd = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_types = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_ucrypto = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }
sgx_urts = { version = "1.1.6", git = "https://github.com/apache/incubator-teaclave-sgx-sdk", branch = "master" }

[patch.crates-io]
ring = { git = "https://github.com/betrusted-io/ring-xous", branch = "0.16.20-cleanup" }
