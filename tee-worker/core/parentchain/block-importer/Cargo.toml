[package]
name = "itc-parentchain-block-importer"
version = "0.9.0"
authors = ['Trust Computing GmbH <info@litentry.com>', 'Integritee AG <hello@integritee.network>']
edition = "2021"

[dependencies]
# sgx dependencies
sgx_tstd = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
sgx_types = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }

# local dependencies
ita-stf = { workspace = true }
itc-parentchain-indirect-calls-executor = { workspace = true }
itc-parentchain-light-client = { workspace = true }
itp-enclave-metrics = { workspace = true }
itp-extrinsics-factory = { workspace = true }
itp-stf-executor = { workspace = true }
itp-types = { workspace = true }

# sgx enabled external libraries
thiserror_sgx = { workspace = true, optional = true }

# crates.io std-only compatible external libraries (make sure these versions match with the sgx-enabled ones above)
thiserror = { workspace = true, optional = true }

# crates.io no-std compatible libraries
codec = { workspace = true, features = ["derive"] }
log = { workspace = true }
sp-runtime = { workspace = true }

# litentry
itp-ocall-api = { workspace = true }

[features]
default = ["std"]
std = [
    # local
    "ita-stf/std",
    "itc-parentchain-indirect-calls-executor/std",
    "itc-parentchain-light-client/std",
    "itp-enclave-metrics/std",
    "itp-extrinsics-factory/std",
    "itp-stf-executor/std",
    "itp-types/std",
    # no-std compatible libraries
    "codec/std",
    "log/std",
    "sp-runtime/std",
    # std compatible external
    "thiserror",
    "itp-ocall-api/std",
]
sgx = [
    # sgx
    "sgx_tstd",
    # local
    "ita-stf/sgx",
    "itc-parentchain-indirect-calls-executor/sgx",
    "itc-parentchain-light-client/sgx",
    "itp-enclave-metrics/sgx",
    "itp-extrinsics-factory/sgx",
    "itp-stf-executor/sgx",
    # sgx enabled external libraries
    "thiserror_sgx",
]

# feature to export mock implementations, only to be used for dev-dependencies!
mocks = []
