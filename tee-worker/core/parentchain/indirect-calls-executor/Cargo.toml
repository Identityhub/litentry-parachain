[package]
name = "itc-parentchain-indirect-calls-executor"
version = "0.9.0"
authors = ['Trust Computing GmbH <info@litentry.com>', 'Integritee AG <hello@integritee.network>']
edition = "2021"

[dependencies]
# sgx dependencies
sgx_tstd = { workspace = true, optional = true }
sgx_types = { workspace = true }

# local dependencies
itp-api-client-types = { workspace = true }
itp-node-api = { workspace = true }
itp-sgx-crypto = { workspace = true }
itp-sgx-runtime-primitives = { workspace = true }
itp-stf-executor = { workspace = true }
itp-stf-primitives = { workspace = true }
itp-test = { workspace = true }
itp-top-pool-author = { workspace = true }
itp-types = { workspace = true }

# sgx enabled external libraries
futures_sgx = { workspace = true, optional = true }
thiserror_sgx = { workspace = true, optional = true }

# std compatible external libraries (make sure these versions match with the sgx-enabled ones above)
futures = { workspace = true, optional = true }
thiserror = { workspace = true, optional = true }

# no-std compatible libraries
bs58 = { workspace = true }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
log = { workspace = true }

# substrate dep
binary-merkle-tree = { workspace = true }
sp-core = { workspace = true }
sp-runtime = { workspace = true }

# litentry
itp-utils = { workspace = true }
lc-scheduled-enclave = { workspace = true, optional = true }
litentry-primitives = { workspace = true }
parachain-core-primitives = { workspace = true }
sp-std = { workspace = true }

[dev-dependencies]
env_logger = { workspace = true }
itp-node-api = { workspace = true, features = ["mocks"] }
itp-sgx-crypto = { workspace = true, features = ["mocks"] }
itp-stf-executor = { workspace = true, features = ["mocks"] }
itp-test = { workspace = true }
itp-top-pool-author = { workspace = true, features = ["mocks"] }
itc-parentchain-test = { workspace = true }

[features]
default = ["std"]
std = [
    "bs58/std",
    "codec/std",
    "futures",
    "itp-node-api/std",
    "itp-sgx-crypto/std",
    "itp-stf-executor/std",
    "itp-top-pool-author/std",
    "itp-api-client-types/std",
    "itp-test/std",
    "itp-types/std",
    "itp-sgx-runtime-primitives/std",
    "log/std",
    #substrate
    "binary-merkle-tree/std",
    "sp-core/std",
    "sp-runtime/std",
    "thiserror",
    # litentry
    "litentry-primitives/std",
    "itp-utils/std",
    "lc-scheduled-enclave/std",
]
sgx = [
    "sgx_tstd",
    "futures_sgx",
    "itp-node-api/sgx",
    "itp-sgx-crypto/sgx",
    "itp-stf-executor/sgx",
    "itp-top-pool-author/sgx",
    "itp-test/sgx",
    "thiserror_sgx",
    # litentry
    "litentry-primitives/sgx",
    "lc-scheduled-enclave/sgx",
]
