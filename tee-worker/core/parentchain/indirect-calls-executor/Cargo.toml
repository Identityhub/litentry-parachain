[package]
authors = ["Integritee AG <hello@integritee.network>"]
edition = "2021"
name = "itc-parentchain-indirect-calls-executor"
version = "0.9.0"

[dependencies]
# sgx dependencies
sgx_tstd = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git", optional = true }
sgx_types = { branch = "master", git = "https://github.com/apache/teaclave-sgx-sdk.git" }

# local dependencies
ita-stf = { path = "../../../app-libs/stf", default-features = false }
itp-node-api = { path = "../../../core-primitives/node-api", default-features = false }
itp-ocall-api = { path = "../../../core-primitives/ocall-api", default-features = false }
itp-sgx-crypto = { path = "../../../core-primitives/sgx/crypto", default-features = false }
itp-stf-executor = { path = "../../../core-primitives/stf-executor", default-features = false }
itp-stf-primitives = { path = "../../../core-primitives/stf-primitives", default-features = false }
itp-top-pool-author = { path = "../../../core-primitives/top-pool-author", default-features = false }
itp-types = { path = "../../../core-primitives/types", default-features = false }
itp-utils = { default-features = false, path = "../../../core-primitives/utils" }

# sgx enabled external libraries
futures_sgx = { package = "futures", git = "https://github.com/mesalock-linux/futures-rs-sgx", optional = true }
thiserror_sgx = { package = "thiserror", git = "https://github.com/mesalock-linux/thiserror-sgx", tag = "sgx_1.1.3", optional = true }

# std compatible external libraries (make sure these versions match with the sgx-enabled ones above)
futures = { version = "0.3.8", optional = true }
thiserror = { version = "1.0", optional = true }

# no-std compatible libraries
bs58 = { version = "0.4.0", default-features = false, features = ["alloc"] }
codec = { package = "parity-scale-codec", version = "3.0.0", default-features = false, features = ["derive"] }
log = { version = "0.4", default-features = false }

# substrate dep
beefy-merkle-tree = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
binary-merkle-tree = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
sp-core = { default-features = false, features = ["full_crypto"], git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
sp-runtime = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }
sp-std = { default-features = false, git = "https://github.com/paritytech/substrate.git", branch = "polkadot-v0.9.39" }

# scs/integritee
substrate-api-client = { git = "https://github.com/scs/substrate-api-client.git", branch = "polkadot-v0.9.39-tag-v0.7.0", default-features = false }

# litentry
ita-sgx-runtime = { path = "../../../app-libs/sgx-runtime", default-features = false }
itp-component-container = { path = "../../../core-primitives/component-container", default-features = false, optional = true }
lc-scheduled-enclave = { path = "../../../litentry/core/scheduled-enclave", default-features = false, optional = true }
litentry-primitives = { path = "../../../litentry/primitives", default-features = false }
pallet-imp = { package = "pallet-identity-management", path = "../../../../pallets/identity-management", default-features = false }
pallet-vcmp = { package = "pallet-vc-management", path = "../../../../pallets/vc-management", default-features = false }
parachain-core-primitives = { package = "core-primitives", path = "../../../../primitives/core", default-features = false }

[dev-dependencies]
env_logger = "0.10.0"
hex = "0.4.2"
itp-node-api = { path = "../../../core-primitives/node-api", features = ["mocks"] }
itc-parentchain-test = { path = "../../../core/parentchain/test" }
itp-sgx-crypto = { path = "../../../core-primitives/sgx/crypto", features = ["mocks"] }
itp-stf-executor = { path = "../../../core-primitives/stf-executor", features = ["mocks"] }
itp-test = { path = "../../../core-primitives/test" }
itp-top-pool-author = { path = "../../../core-primitives/top-pool-author", features = ["mocks"] }

[features]
default = ["std"]
sgx = [
    "sgx_tstd",
    "futures_sgx",
    "ita-stf/sgx",
    "itp-node-api/sgx",
    "itp-sgx-crypto/sgx",
    "itp-stf-executor/sgx",
    "itp-top-pool-author/sgx",
    "thiserror_sgx",
    "litentry-primitives/sgx",
    "lc-scheduled-enclave/sgx",
    "itp-component-container/sgx",
    "itp-utils/sgx",
]
std = [
    "bs58/std",
    "codec/std",
    "futures",
    "ita-stf/std",
    "itp-node-api/std",
    "itp-ocall-api/std",
    "itp-sgx-crypto/std",
    "itp-stf-executor/std",
    "itp-top-pool-author/std",
    "itp-types/std",
    "log/std",
    "lc-scheduled-enclave/std",
    "itp-component-container/std",
    #substrate
    "binary-merkle-tree/std",
    "sp-core/std",
    "sp-runtime/std",
    "substrate-api-client/std",
    "thiserror",
    "ita-sgx-runtime/std",
    "litentry-primitives/std",
    "pallet-imp/std",
    "pallet-vcmp/std",
    "itp-utils/std",
]
